{
  "openapi": "3.0.0",
  "paths": {
    "/companies/{companyId}/orders": {
      "get": {
        "operationId": "listUserOrders",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "example": "2022-01-30T10:30:40-03:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": [
              "pending"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "confirming_payment",
                  "waiting_delivery",
                  "delivering",
                  "concluded",
                  "failed",
                  "cancelled",
                  "partially_cancelled",
                  "expired"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createOrder",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/orders/usage-report": {
      "get": {
        "operationId": "getUsageReport",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "example": "2022-01-30T10:30:40-03:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": [
              "pending"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "confirming_payment",
                  "waiting_delivery",
                  "delivering",
                  "concluded",
                  "failed",
                  "cancelled",
                  "partially_cancelled",
                  "expired"
                ]
              }
            }
          },
          {
            "name": "currencyId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/orders/{orderId}": {
      "get": {
        "operationId": "getUserOrder",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fetchNewestStatus",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Use this attribute to force fetching the newest status available based on payment driver used.",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/orders/preview": {
      "post": {
        "operationId": "computeOrderPreview",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPreviewDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/orders/get-by-deliver-id/{deliverId}": {
      "get": {
        "operationId": "getPublicOrderByDeliverId",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deliverId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/orders/get-by-kyc-user-context-id/{kycUserContextId}": {
      "get": {
        "operationId": "getByKycUserContextId",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kycUserContextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fetchNewestStatus",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Use this attribute to force fetching the newest status available based on payment driver used.",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/orders/{orderId}/pay": {
      "patch": {
        "operationId": "payOrder",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders": {
      "get": {
        "operationId": "listOrders",
        "summary": "",
        "description": "List orders",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "example": "2022-01-30T10:30:40-03:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": [
              "pending"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "confirming_payment",
                  "waiting_delivery",
                  "delivering",
                  "concluded",
                  "failed",
                  "cancelled",
                  "partially_cancelled",
                  "expired"
                ]
              }
            }
          },
          {
            "name": "createdFrom",
            "required": false,
            "in": "query",
            "example": null,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdUntil",
            "required": false,
            "in": "query",
            "example": null,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "currencyId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "required": false,
            "in": "query",
            "example": "pix",
            "schema": {
              "$ref": "#/components/schemas/PaymentMethodEnum"
            }
          },
          {
            "name": "paymentProvider",
            "required": false,
            "in": "query",
            "example": "stripe",
            "schema": {
              "$ref": "#/components/schemas/PaymentProviderEnum"
            }
          },
          {
            "name": "utmCampaign",
            "required": false,
            "in": "query",
            "example": "super_sales",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders/xls": {
      "get": {
        "operationId": "requestCompanyOrdersExportGeneration",
        "summary": "",
        "description": "Requests an order exports XLS based on listing params",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "example": "2022-01-30T10:30:40-03:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": [
              "pending"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "confirming_payment",
                  "waiting_delivery",
                  "delivering",
                  "concluded",
                  "failed",
                  "cancelled",
                  "partially_cancelled",
                  "expired"
                ]
              }
            }
          },
          {
            "name": "createdFrom",
            "required": false,
            "in": "query",
            "example": null,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdUntil",
            "required": false,
            "in": "query",
            "example": null,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "currencyId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "required": false,
            "in": "query",
            "example": "pix",
            "schema": {
              "$ref": "#/components/schemas/PaymentMethodEnum"
            }
          },
          {
            "name": "paymentProvider",
            "required": false,
            "in": "query",
            "example": "stripe",
            "schema": {
              "$ref": "#/components/schemas/PaymentProviderEnum"
            }
          },
          {
            "name": "utmCampaign",
            "required": false,
            "in": "query",
            "example": "super_sales",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders/{orderId}": {
      "get": {
        "operationId": "getOrderById",
        "summary": "",
        "description": "Get a specific company order by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fetchNewestStatus",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Use this attribute to force fetching the newest status available based on payment driver used.",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders/{orderId}/cancel": {
      "patch": {
        "operationId": "cancelOrder",
        "summary": "",
        "description": "Cancel an order",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders/{orderId}/force-deliver": {
      "patch": {
        "operationId": "forceOrderDeliver",
        "summary": "",
        "description": "Force delivery of order token",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders/{orderId}/approve-payment": {
      "patch": {
        "operationId": "approveOrderManually",
        "summary": "",
        "description": "Approves an order manually. This order should be created using transfer payment provider",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders/{orderId}/order-documents": {
      "post": {
        "operationId": "createOrderDocument",
        "summary": "",
        "description": "Creates an order document",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDocumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDocumentEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Order Documents (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "get": {
        "operationId": "listOrderDocuments",
        "summary": "",
        "description": "Lists order documents from order",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDocumentsEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Order Documents (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders/{orderId}/order-documents/{id}": {
      "delete": {
        "operationId": "removeOrderDocuments",
        "summary": "",
        "description": "Deletes an order document from order",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Order Documents (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/order-products": {
      "get": {
        "operationId": "listOrderProducts",
        "summary": "",
        "description": "List order products",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "example": "2022-01-30T10:30:40-03:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": [
              "pending"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "confirming_payment",
                  "waiting_delivery",
                  "delivering",
                  "concluded",
                  "failed",
                  "cancelled",
                  "partially_cancelled",
                  "expired"
                ]
              }
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "currencyId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "required": false,
            "in": "query",
            "example": "pix",
            "schema": {
              "$ref": "#/components/schemas/PaymentMethodEnum"
            }
          },
          {
            "name": "paymentProvider",
            "required": false,
            "in": "query",
            "example": "stripe",
            "schema": {
              "$ref": "#/components/schemas/PaymentProviderEnum"
            }
          },
          {
            "name": "utmCampaign",
            "required": false,
            "in": "query",
            "example": "super_sales",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Order Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/order-products/xls": {
      "get": {
        "operationId": "requestCompanyOrderProductsExportGeneration",
        "summary": "",
        "description": "Requests an order products export XLS based on listing params",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "example": "2022-01-30T10:30:40-03:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": [
              "pending"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "confirming_payment",
                  "waiting_delivery",
                  "delivering",
                  "concluded",
                  "failed",
                  "cancelled",
                  "partially_cancelled",
                  "expired"
                ]
              }
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "currencyId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "required": false,
            "in": "query",
            "example": "pix",
            "schema": {
              "$ref": "#/components/schemas/PaymentMethodEnum"
            }
          },
          {
            "name": "paymentProvider",
            "required": false,
            "in": "query",
            "example": "stripe",
            "schema": {
              "$ref": "#/components/schemas/PaymentProviderEnum"
            }
          },
          {
            "name": "utmCampaign",
            "required": false,
            "in": "query",
            "example": "super_sales",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Order Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/super-admin/orders/xls": {
      "get": {
        "operationId": "requestSystemOrdersExportGeneration",
        "summary": "",
        "description": "Requests an order exports XLS for all tenants based on listing params",
        "parameters": [
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "example": "2022-01-30T10:30:40-03:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": [
              "pending"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "confirming_payment",
                  "waiting_delivery",
                  "delivering",
                  "concluded",
                  "failed",
                  "cancelled",
                  "partially_cancelled",
                  "expired"
                ]
              }
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "currencyId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "required": false,
            "in": "query",
            "example": "pix",
            "schema": {
              "$ref": "#/components/schemas/PaymentMethodEnum"
            }
          },
          {
            "name": "paymentProvider",
            "required": false,
            "in": "query",
            "example": "stripe",
            "schema": {
              "$ref": "#/components/schemas/PaymentProviderEnum"
            }
          },
          {
            "name": "utmCampaign",
            "required": false,
            "in": "query",
            "example": "super_sales",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "excludeSandboxes",
            "required": false,
            "in": "query",
            "example": true,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportEntityDto"
                }
              }
            }
          }
        },
        "tags": [
          "Orders (Super Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/super-admin/orders/dispatch-order-event": {
      "post": {
        "operationId": "dispatchSystemOrderEvent",
        "summary": "",
        "description": "Dispatches an order system event that will be used to execute some system functionalities",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DispatchOrderEventDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Orders (Super Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/products": {
      "get": {
        "operationId": "listProducts",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/ProductSortBy"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "includeMetadata",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Includes first product token found metadata for each product. (Works good if you want to get some common NFT metadata attributes that is applied for all contract tokens)",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "tagIds",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/products/{productId}": {
      "get": {
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refreshPermissions",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Forces permission refresh which can affect canPurchase result params",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/products/{productId}/can-purchase": {
      "get": {
        "operationId": "canPurchaseProduct",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/products/get-by-slug/{slug}": {
      "get": {
        "operationId": "getProductBySlug",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refreshPermissions",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Forces permission refresh which can affect canPurchase result params",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products": {
      "post": {
        "operationId": "createProduct",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEntity"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "get": {
        "operationId": "findProducts",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/ProductSortBy"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "includeMetadata",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Includes first product token found metadata for each product. (Works good if you want to get some common NFT metadata attributes that is applied for all contract tokens)",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "tagIds",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "draft",
                  "publishing",
                  "updating",
                  "published",
                  "cancelled",
                  "sold"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}": {
      "get": {
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/get-by-slug/{slug}": {
      "get": {
        "operationId": "getProductBySlug",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/publish": {
      "patch": {
        "operationId": "publishProduct",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/cancel": {
      "patch": {
        "operationId": "cancelProductResaleById",
        "summary": "",
        "description": "Cancels some product to be on sale inside a company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/order-rules": {
      "get": {
        "operationId": "findProductOrderRules",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/ProductOrderRuleSortBy"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createProductOrderRule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductOrderRuleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/order-rules/{orderRuleId}": {
      "get": {
        "operationId": "getProductOrderRule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderRuleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateProductOrderRule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderRuleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductOrderRuleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteProductOrderRule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderRuleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/products-resale": {
      "get": {
        "operationId": "listUserResaleProducts",
        "summary": "",
        "description": "Lists users product resales",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/ProductSortBy"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "includeMetadata",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Includes first product token found metadata for each product. (Works good if you want to get some common NFT metadata attributes that is applied for all contract tokens)",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "tagIds",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEntity"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products Resale"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "addProductForResale",
        "summary": "",
        "description": "Add some user token for resale inside a company marketplace",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResaleProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEntity"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products Resale"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/products-resale/{productId}/cancel": {
      "patch": {
        "operationId": "cancelProductResaleById",
        "summary": "",
        "description": "Cancels some user token from resale inside a company marketplace",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products Resale"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/variants": {
      "get": {
        "operationId": "listProductVariants",
        "summary": "",
        "description": "Lists all product variants",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createProductVariant",
        "summary": "",
        "description": "Creates a new product variant",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductVariantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/variants/{variantId}": {
      "get": {
        "operationId": "getProductVariant",
        "summary": "",
        "description": "Gets some product variant by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateProductVariant",
        "summary": "",
        "description": "Updates some product variant",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductVariantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteProductVariant",
        "summary": "",
        "description": "Deletes some product variant",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/variants/{variantId}/values": {
      "get": {
        "operationId": "listProductVariantValues",
        "summary": "",
        "description": "Lists all product variant available values",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantValueEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createProductVariantValue",
        "summary": "",
        "description": "Creates a new product variant value",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductVariantValueDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantValueEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/variants/{variantId}/values/{variantValueId}": {
      "get": {
        "operationId": "getProductVariantValue",
        "summary": "",
        "description": "Gets some product variant value",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variantValueId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantValueEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteProductVariantValue",
        "summary": "",
        "description": "Deletes some product variant value by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variantValueId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/users/{userId}/providers": {
      "get": {
        "operationId": "listUserPaymentProviders",
        "summary": "",
        "description": "Lists available users payment providers",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPaymentProviderEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Users Payment Providers (Used for Resale)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/users/{userId}/providers/check-configured-providers": {
      "get": {
        "operationId": "checkUserConfiguredPaymentProviders",
        "summary": "",
        "description": "Gets user state of missing/configured required company payment provider",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConfiguredProvidersResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Users Payment Providers (Used for Resale)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/users/{userId}/providers/stripe": {
      "patch": {
        "operationId": "requestUserStripePaymentProvider",
        "summary": "",
        "description": "Requests a configuration of Stripe payment provider in the user (needs to be finished with oauth connection)",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectOrRefreshStripePaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConnectAccountResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Users Payment Providers (Used for Resale)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/users/{userId}/providers/stripe/finish-connection": {
      "patch": {
        "operationId": "finishUserStripePaymentProvider",
        "summary": "",
        "description": "Finishes user connection of Stripe payment provider configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPaymentProviderEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Users Payment Providers (Used for Resale)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/users/{userId}/providers/stripe/refresh-connection": {
      "patch": {
        "operationId": "refreshUserStripePaymentProvider",
        "summary": "",
        "description": "Refreshes an user stripe payment provider connection",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectOrRefreshStripePaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConnectAccountResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Users Payment Providers (Used for Resale)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/users/{userId}/providers/{provider}": {
      "patch": {
        "operationId": "configureUserPaymentProvider",
        "summary": "",
        "description": "Configures some user payment provider",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "example": "pagar_me",
            "schema": {
              "$ref": "#/components/schemas/PaymentProviderEnum"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigureUserPaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPaymentProviderEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Users Payment Providers (Used for Resale)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteUserPaymentProvider",
        "summary": "",
        "description": "Deletes some user payment provider configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "example": "pagar_me",
            "schema": {
              "$ref": "#/components/schemas/PaymentProviderEnum"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Users Payment Providers (Used for Resale)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/users/{userId}/credit-cards": {
      "get": {
        "operationId": "listUserCreditCards",
        "summary": "",
        "description": "Lists all available user credit cards",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicUserCreditCardEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Users Credit Cards"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "saveUserCreditCard",
        "summary": "",
        "description": "Saves a new user credit card",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveUserCreditCardDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicUserCreditCardEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Users Credit Cards"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/users/{userId}/credit-cards/{creditCardId}": {
      "delete": {
        "operationId": "deleteUserCreditCard",
        "summary": "",
        "description": "Deletes some user credit card by its id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creditCardId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Users Credit Cards"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/is-enabled": {
      "get": {
        "operationId": "getCompanyWithEnabledState",
        "summary": "",
        "description": "Gets company with its commerce state",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyWithEnabledStateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations": {
      "get": {
        "operationId": "getCompanyConfigurations",
        "summary": "",
        "description": "Gets company configurations",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateCompanyConfigurations",
        "summary": "",
        "description": "Updates company configurations",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanyConfigurationsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers-selections": {
      "post": {
        "operationId": "setCompanyPaymentProviderSelection",
        "summary": "",
        "description": "Set a some company configured payment provider to be available for use in some purchasing occasion",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCompanyPaymentProviderSelectionDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/pagar-me": {
      "patch": {
        "operationId": "configurePagarMePaymentProvider",
        "summary": "",
        "description": "Configures/Refresh configuration of Pagar.me payment provider in the company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePagarMePaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/paypal": {
      "patch": {
        "operationId": "configurePaypalPaymentProvider",
        "summary": "",
        "description": "Configures/Refresh configuration of Paypal payment provider in the company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaypalPaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/transfer": {
      "patch": {
        "operationId": "createTransferPaymentProvider",
        "summary": "",
        "description": "Creates configuration of transfer payment provider in the company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferPaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/stripe": {
      "patch": {
        "operationId": "requestStripePaymentProviderConfiguration",
        "summary": "",
        "description": "Request a configuration of Stripe payment provider in the company (needs to be finished with oauth connection)",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStripePaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConnectAccountResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/stripe/finish-connection": {
      "patch": {
        "operationId": "finishStripePaymentProviderConfiguration",
        "summary": "",
        "description": "Finish connection of Stripe payment provider configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/stripe/refresh-connection": {
      "patch": {
        "operationId": "refreshStripePaymentProviderConfiguration",
        "summary": "",
        "description": "Refresh Stripe payment provider connection",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectOrRefreshStripePaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConnectAccountResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/asaas": {
      "patch": {
        "operationId": "configureAsaasPaymentProvider",
        "summary": "",
        "description": "Configures/Refresh configuration of ASAAS payment provider in the company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAsaasPaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/{provider}": {
      "delete": {
        "operationId": "deletePaymentProviderConfiguration",
        "summary": "",
        "description": "Deletes some company payment provider configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "example": "pagar_me",
            "schema": {
              "$ref": "#/components/schemas/PaymentProviderEnum"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/notifications/{notificationType}": {
      "get": {
        "operationId": "getCompanyNotificationConfig",
        "summary": "",
        "description": "Gets some email company notification config by its type",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notificationType",
            "required": true,
            "in": "path",
            "example": "user_order_concluded",
            "schema": {
              "$ref": "#/components/schemas/NotificationTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyNotificationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "setCompanyNotificationConfig",
        "summary": "",
        "description": "Sets some company notification email config by its type",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notificationType",
            "required": true,
            "in": "path",
            "example": "user_order_concluded",
            "schema": {
              "$ref": "#/components/schemas/NotificationTypeEnum"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCompanyNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyNotificationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/split-configurations": {
      "get": {
        "operationId": "listCompanySplitConfigurations",
        "summary": "",
        "description": "Lists all company split configuration rules",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "example": "2022-01-30T10:30:40-03:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "example": [
              "product_price"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "client_service_fee",
                  "company_service_fee",
                  "resale_fee",
                  "gas_fee",
                  "product_price"
                ]
              }
            }
          },
          {
            "name": "paymentProvider",
            "required": false,
            "in": "query",
            "example": [
              "asaas"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pagar_me",
                  "paypal",
                  "transfer",
                  "stripe",
                  "asaas",
                  "crypto",
                  "free",
                  "braza"
                ]
              }
            }
          },
          {
            "name": "paymentMethod",
            "required": false,
            "in": "query",
            "example": [
              "pix"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "credit_card",
                  "debit_card",
                  "pix",
                  "crypto",
                  "transfer",
                  "billet",
                  "google_pay",
                  "apple_pay"
                ]
              }
            }
          },
          {
            "name": "contractAddress",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "example": 1284,
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  1,
                  3,
                  4,
                  42,
                  1337,
                  80001,
                  137,
                  1284,
                  1285
                ]
              }
            }
          },
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySplitConfigurationEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createCompanySplitConfiguration",
        "summary": "",
        "description": "Creates a new company split configuration rule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanySplitConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySplitConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/split-configurations/{id}": {
      "get": {
        "operationId": "getCompanySplitConfigurationById",
        "summary": "",
        "description": "Gets some company split configuration rule by its id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySplitConfigurationEntityWithCorrelatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateCompanySplitConfiguration",
        "summary": "",
        "description": "Updates some company split configuration rule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanySplitConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySplitConfigurationEntityWithCorrelatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteCompanySplitConfiguration",
        "summary": "",
        "description": "Deletes some company split configuration rule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/split-configurations/{id}/correlated-configurations": {
      "get": {
        "operationId": "getCorrelatedSplitConfigurations",
        "summary": "",
        "description": "Gets some company split configuration correlated rules",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CorrelatedSplitConfigurationsResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/super-admin/companies/{companyId}/enable": {
      "patch": {
        "operationId": "createAndEnableCommerceCompany",
        "summary": "",
        "description": "Enables/Setup company on commerce services",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuperAdminCompanySetInfoDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Companies (Super Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/super-admin/companies/{companyId}": {
      "patch": {
        "operationId": "superAdminUpdateCompany",
        "summary": "",
        "description": "Updates company super admin properties",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuperAdminCompanySetInfoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          }
        },
        "tags": [
          "Companies (Super Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/globals/currencies": {
      "get": {
        "operationId": "listCurrencies",
        "summary": "",
        "description": "Lists system available currencies and its supported payment providers",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Currencies was successfully got",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyEntityPaginatedDto"
                }
              }
            }
          }
        },
        "tags": [
          "Globals"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/currencies/{currencyId}/has-allowance": {
      "get": {
        "operationId": "hasCurrencyAllowance",
        "summary": "",
        "description": "Checks if some user wallet has approved an allowance to purchase using some amount of its ERC20 currency tokens",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currencyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "walletAddress",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "required": true,
            "in": "query",
            "example": "100",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Allowance check successfully executed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HasAllowanceResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Currencies"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/currencies/{currencyId}/increase-allowance": {
      "patch": {
        "operationId": "increaseCurrencyAllowance",
        "summary": "",
        "description": "Sends to blockchain a request to increase some user wallet allowance of the ERC20 currency to a target amount. This is necessary to purchase using ERC20 tokens.",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currencyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncreaseCurrencyAllowanceDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Allowance increase was successfully sent to blockchain."
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Currencies"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/tags": {
      "post": {
        "operationId": "createTag",
        "summary": "",
        "description": "Create a company tag",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Tags (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "get": {
        "operationId": "listTags",
        "summary": "",
        "description": "Get all company tags paginated",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/TagsSortBy"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsEntityPaginated"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Tags (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/tags/{id}": {
      "get": {
        "operationId": "getTag",
        "summary": "",
        "description": "Get some company tag by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Tags (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateTag",
        "summary": "",
        "description": "Updates some company tag",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Tags (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations": {
      "get": {
        "operationId": "listWebhooksConfigurations",
        "summary": "",
        "description": "Lists all company webhooks configurations",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksConfigurationEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createWebhooksConfiguration",
        "summary": "",
        "description": "Creates a new company webhooks configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateWebhooksConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations/{configurationId}": {
      "get": {
        "operationId": "getWebhookConfiguration",
        "summary": "",
        "description": "Gets some company webhooks configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateWebhooksConfiguration",
        "summary": "",
        "description": "Updates some company webhooks configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateWebhooksConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations/{configurationId}/enable": {
      "patch": {
        "operationId": "enableWebhooksConfiguration",
        "summary": "",
        "description": "Enables some company webhooks configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations/{configurationId}/disable": {
      "patch": {
        "operationId": "disableWebhooksConfiguration",
        "summary": "",
        "description": "Disables some company webhooks configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations/{configurationId}/webhooks": {
      "get": {
        "operationId": "listWebhooksConfigurationWebhooks",
        "summary": "",
        "description": "Lists all webhooks sent using some webhooks configuration of company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations/{configurationId}/webhooks/{webhookId}": {
      "get": {
        "operationId": "getWebhookConfigurationWebhook",
        "summary": "",
        "description": "Gets some company webhooks configuration sent webhook",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhookId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/assets": {
      "post": {
        "operationId": "requestAssetUpload",
        "summary": "",
        "description": "Creates a new request to upload some asset (image or video) in our service. You must use this endpoint response to upload assets using the specific provider apis (ex: Cloudinary)",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAssetUploadDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asset upload request successfully created!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetEntityWithProviderUploadParamsDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Assets (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/referral/check-can-create": {
      "get": {
        "operationId": "canCreateReferralCoupon",
        "summary": "",
        "description": "Checks if user can create a referral coupon for some product id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckCanCreateReferralResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "User Referral Coupons"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/referral": {
      "get": {
        "operationId": "listUserReferralCoupons",
        "summary": "",
        "description": "Lists all user company referral coupons",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralPromotionEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "User Referral Coupons"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "activateUserReferralCoupon",
        "summary": "",
        "description": "Activates a new user referral coupon based on some company product",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateUserReferralPromotionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralPromotionEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "User Referral Coupons"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/referral/{productId}": {
      "get": {
        "operationId": "getUserReferralCoupon",
        "summary": "",
        "description": "Gets some user company referral coupon by product id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralPromotionEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "User Referral Coupons"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/promotions": {
      "get": {
        "operationId": "listPromotions",
        "summary": "",
        "description": "Lists all company promotions",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createPromotion",
        "summary": "",
        "description": "Creates a new company promotion",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/promotions/{promotionId}": {
      "get": {
        "operationId": "getPromotion",
        "summary": "",
        "description": "Gets some company promotion by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updatePromotion",
        "summary": "",
        "description": "Updates some company promotion",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deletePromotion",
        "summary": "",
        "description": "Deletes some company promotion",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/promotions/{promotionId}/products": {
      "get": {
        "operationId": "listPromotionProducts",
        "summary": "",
        "description": "Lists all company specific promotion products",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionProductEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createPromotionProduct",
        "summary": "",
        "description": "Creates a new company promotion product",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionProductEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "setAndOverridePromotionProducts",
        "summary": "",
        "description": "Sets and override the company promotion products",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetAndOverridePromotionProductsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromotionProductEntityDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/promotions/{promotionId}/products/{productId}": {
      "get": {
        "operationId": "getPromotionProduct",
        "summary": "",
        "description": "Gets some company promotion product by ids",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionProductEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deletePromotionProduct",
        "summary": "",
        "description": "Deletes some company promotion product by ids",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/promotions/{promotionId}/whitelists": {
      "get": {
        "operationId": "listPromotionWhitelists",
        "summary": "",
        "description": "Lists all company specific promotion whitelists",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionWhitelistEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createPromotionWhitelist",
        "summary": "",
        "description": "Creates a new company promotion whitelist",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionWhitelistDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionWhitelistEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "setAndOverridePromotionWhitelists",
        "summary": "",
        "description": "Sets and override the company promotion whitelists",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetAndOverridePromotionWhitelistsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromotionWhitelistEntityDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/promotions/{promotionId}/whitelists/{whitelistId}": {
      "get": {
        "operationId": "getPromotionWhitelist",
        "summary": "",
        "description": "Gets some company promotion whitelist by ids",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "whitelistId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionWhitelistEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deletePromotionWhitelist",
        "summary": "",
        "description": "Deletes some company promotion whitelist by ids",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "whitelistId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Promotions (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/rewards": {
      "get": {
        "operationId": "listRewards",
        "summary": "",
        "description": "Lists all company rewards",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Rewards (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createReward",
        "summary": "",
        "description": "Creates a new company reward",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRewardDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Rewards (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/rewards/{rewardId}": {
      "get": {
        "operationId": "getReward",
        "summary": "",
        "description": "Gets some company reward by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Rewards (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateReward",
        "summary": "",
        "description": "Updates some company reward",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRewardDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Rewards (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteReward",
        "summary": "",
        "description": "Deletes some company reward",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Rewards (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/rewards/{rewardId}/activate": {
      "patch": {
        "operationId": "activateRewardById",
        "summary": "",
        "description": "Activates some company reward by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Rewards (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/rewards/{rewardId}/deactivate": {
      "patch": {
        "operationId": "deactivateRewardById",
        "summary": "",
        "description": "Deactivates some company reward by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rewardId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Rewards (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/exports": {
      "get": {
        "operationId": "listCompanyExports",
        "summary": "",
        "description": "Lists all company exports",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Exports (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/exports/{exportId}": {
      "get": {
        "operationId": "getCompanyExport",
        "summary": "",
        "description": "Gets some specific company export by its ID",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exportId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Exports (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/exports/generate/orders": {
      "post": {
        "operationId": "requestCompanyOrdersExport",
        "summary": "",
        "description": "Requests an order exports XLS based on some params",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersAdminExportDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Exports (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects": {
      "get": {
        "operationId": "listCompanyProjects",
        "summary": "",
        "description": "Lists company projects",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createCompanyProject",
        "summary": "",
        "description": "Creates a project inside a company context",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects/{projectId}": {
      "get": {
        "operationId": "getCompanyProject",
        "summary": "",
        "description": "Gets some company project by ID",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateCompanyProject",
        "summary": "",
        "description": "Updates some company project",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteCompanyProject",
        "summary": "",
        "description": "Deletes some company project",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects/check/host-availability": {
      "get": {
        "operationId": "checkHostState",
        "summary": "",
        "description": "Checks if some host is available to be attached into a project",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "host",
            "required": true,
            "in": "query",
            "example": "subdomain.domain.io",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectHostCheckResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects/{projectId}/hosts": {
      "post": {
        "operationId": "attachHostToCompanyProject",
        "summary": "",
        "description": "Attach some host into a company project",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachProjectHostRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectHostEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects/{projectId}/hosts/{hostId}": {
      "delete": {
        "operationId": "detachHostFromCompanyProject",
        "summary": "",
        "description": "Detach some host from a company project",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects/{projectId}/themes/default": {
      "patch": {
        "operationId": "upsertDefaultCompanyProjectTheme",
        "summary": "",
        "description": "Updates some company project default theme. If there's no default theme configured, a new one is automatically created",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProjectThemeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectThemeEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects/{projectId}/pages": {
      "get": {
        "operationId": "listCompanyProjectPages",
        "summary": "",
        "description": "Lists company project pages",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPageEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "upsertCompanyProjectPage",
        "summary": "",
        "description": "Upsert some company project page. The unique key used to upsert is the page route pattern",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProjectPageRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPageEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects/{projectId}/pages/{pageId}": {
      "get": {
        "operationId": "getCompanyProjectPageById",
        "summary": "",
        "description": "Gets a company project page by ID",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enableSimulation",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Use this attribute to enable user page simulation",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "simulateUnauthenticatedUser",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Use this attribute to simulate user profile on page get as an unauthenticated user",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "simulateUserWhitelistAccesses",
            "required": false,
            "in": "query",
            "description": "Use this attribute to simulate whitelist accesses on page get",
            "schema": {
              "format": "uuid",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPageEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateCompanyProjectPageById",
        "summary": "",
        "description": "Updates some company project page by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProjectPageRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPageEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteCompanyProjectPageById",
        "summary": "",
        "description": "Deletes some company project page by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects/{projectId}/pages/{pageId}/activate": {
      "patch": {
        "operationId": "activateCompanyProjectPageById",
        "summary": "",
        "description": "Activates some company project page by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPageEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects/{projectId}/pages/{pageId}/deactivate": {
      "patch": {
        "operationId": "deactivateCompanyProjectPageById",
        "summary": "",
        "description": "Deactivates some company project page by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPageEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/projects/{projectId}/pages/{pageId}/duplicate": {
      "patch": {
        "operationId": "duplicateCompanyProjectPageById",
        "summary": "",
        "description": "Duplicates some company project page by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DuplicateProjectPageRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPageEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Projects (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/globals/component-modules": {
      "get": {
        "operationId": "listComponentModules",
        "summary": "",
        "description": "Lists system available component modules",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/ComponentModuleSortByEnum"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "label",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Component modules was successfully got",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentModuleEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Globals"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createComponentModule",
        "summary": "",
        "description": "Creates a component module globally of just for some company",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComponentModuleRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentModuleEntityDto"
                }
              }
            }
          }
        },
        "tags": [
          "Globals"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/globals/component-modules/{id}": {
      "patch": {
        "operationId": "updateComponentModule",
        "summary": "",
        "description": "Updates some component module",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComponentModuleRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentModuleEntityDto"
                }
              }
            }
          }
        },
        "tags": [
          "Globals"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteComponentModule",
        "summary": "",
        "description": "Deletes some component module",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Globals"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/projects/get-theme": {
      "get": {
        "operationId": "getThemeByUrl",
        "summary": "",
        "description": "Gets some theme configs based on request url",
        "parameters": [
          {
            "name": "url",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectThemeEntityDto"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/projects/get-page": {
      "get": {
        "operationId": "getPageByUrl",
        "summary": "",
        "description": "Gets some page configs based on request url",
        "parameters": [
          {
            "name": "url",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPageEntityDto"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/faq": {
      "get": {
        "operationId": "listFaq",
        "summary": "",
        "description": "Lists FAQ items (questions/answers) inside a context by name including global faq contexts and specific company faq context items",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "contextId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "example": "pre_sale",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityPaginatedDto"
                }
              }
            }
          }
        },
        "tags": [
          "Faq"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/contexts": {
      "get": {
        "operationId": "listFaqContexts",
        "summary": "",
        "description": "Lists all company FAQ contexts",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqContextEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createFaqContext",
        "summary": "",
        "description": "Creates a new FAQ context for a company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFaqContextDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqContextEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/contexts/{contextId}": {
      "get": {
        "operationId": "getFaqContext",
        "summary": "",
        "description": "Gets a company FAQ context",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqContextEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateFaqContext",
        "summary": "",
        "description": "Updates some company FAQ context",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFaqContextDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqContextEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/contexts/{contextId}/items": {
      "get": {
        "operationId": "listFaqContextItems",
        "summary": "",
        "description": "Lists all FAQ items inside some company context",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/contexts/{contextId}/items/{faqItemId}": {
      "get": {
        "operationId": "getFaqContextItem",
        "summary": "",
        "description": "Gets company context FAQ item by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faqItemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/items": {
      "get": {
        "operationId": "listFaqItems",
        "summary": "",
        "description": "Lists all company FAQ items which are associated to some company context",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createFaqItem",
        "summary": "",
        "description": "Creates a new FAQ item inside one or more company contexts",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFaqContextItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/items/{faqItemId}": {
      "get": {
        "operationId": "getFaqItem",
        "summary": "",
        "description": "Gets a company FAQ item by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faqItemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateFaqItem",
        "summary": "",
        "description": "Updates some FAQ item and associate/disassociate it contexts",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faqItemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFaqContextItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "commerce-backend",
    "description": "",
    "version": "2.49.5",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://commerce.stg.w3block.io",
      "description": "W3Block Commerce Server",
      "variables": {}
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      },
      "x-w3block-api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-w3block-api-key",
        "description": "W3block API key"
      },
      "x-w3block-id": {
        "type": "apiKey",
        "in": "header",
        "name": "x-w3block-id",
        "description": "W3block API ID"
      },
      "x-w3block-secret": {
        "type": "apiKey",
        "in": "header",
        "name": "x-w3block-secret",
        "description": "W3block API Secret"
      }
    },
    "schemas": {
      "OrderByEnum": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "PaginationMetaDto": {
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "number",
            "example": 1
          },
          "totalItems": {
            "type": "number",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "example": 1
          },
          "totalPages": {
            "type": "number",
            "example": 1
          },
          "currentPage": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "itemCount",
          "itemsPerPage",
          "currentPage"
        ]
      },
      "PaginationLinksDto": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "example": "http://example.com?page=1"
          },
          "prev": {
            "type": "string",
            "example": "http://example.com?page=1"
          },
          "next": {
            "type": "string",
            "example": "http://example.com?page=2"
          },
          "last": {
            "type": "string",
            "example": "http://example.com?page=3"
          }
        }
      },
      "CompanyEntity": {
        "type": "object",
        "properties": {}
      },
      "UserEntity": {
        "type": "object",
        "properties": {}
      },
      "AddressEntity": {
        "type": "object",
        "properties": {}
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "pending",
          "confirming_payment",
          "waiting_delivery",
          "delivering",
          "concluded",
          "failed",
          "cancelled",
          "partially_cancelled",
          "expired"
        ]
      },
      "OrderProductEntity": {
        "type": "object",
        "properties": {}
      },
      "PaymentEntity": {
        "type": "object",
        "properties": {}
      },
      "OrderEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntity"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "destinationWalletAddress": {
            "type": "string"
          },
          "addressId": {
            "type": "string",
            "format": "uuid"
          },
          "address": {
            "$ref": "#/components/schemas/AddressEntity"
          },
          "status": {
            "default": "pending",
            "example": "pending",
            "$ref": "#/components/schemas/OrderStatus"
          },
          "deliverDate": {
            "format": "date-time",
            "type": "string"
          },
          "expiresIn": {
            "format": "date-time",
            "type": "string"
          },
          "deliverId": {
            "type": "string",
            "example": "B61JHC"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductEntity"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentEntity"
            }
          }
        },
        "required": [
          "id",
          "companyId",
          "userId",
          "destinationWalletAddress",
          "addressId",
          "status",
          "products",
          "payments"
        ]
      },
      "OrderEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "OrderProductExpectedPriceDto": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb"
          },
          "expectedPrice": {
            "type": "string",
            "example": "100"
          }
        },
        "required": [
          "currencyId",
          "expectedPrice"
        ]
      },
      "OrderProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid",
            "example": "3db843f4-1ee6-4f6e-a86d-b0aee938bdde"
          },
          "productTokenId": {
            "type": "string",
            "format": "uuid",
            "example": "3062cdc2-2bd8-4143-8a04-90fc1e607794"
          },
          "variantIds": {
            "example": [],
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "quantity": {
            "type": "string",
            "example": "1",
            "default": "1"
          },
          "expectedPrice": {
            "type": "string",
            "example": "100",
            "deprecated": true
          },
          "expectedPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductExpectedPriceDto"
            }
          }
        },
        "required": [
          "productId",
          "expectedPrices"
        ]
      },
      "MultiPaymentSelectionAmountTypeEnum": {
        "type": "string",
        "enum": [
          "percentage",
          "all_remaining",
          "fixed"
        ]
      },
      "PaymentMethodEnum": {
        "type": "string",
        "enum": [
          "credit_card",
          "debit_card",
          "pix",
          "crypto",
          "transfer",
          "billet",
          "google_pay",
          "apple_pay"
        ]
      },
      "PaymentProviderEnum": {
        "type": "string",
        "enum": [
          "pagar_me",
          "paypal",
          "transfer",
          "stripe",
          "asaas",
          "crypto",
          "free",
          "braza"
        ]
      },
      "OrderMultiPaymentSelectionDto": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string",
            "format": "uuid",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb"
          },
          "amountType": {
            "example": "percentage",
            "$ref": "#/components/schemas/MultiPaymentSelectionAmountTypeEnum"
          },
          "amount": {
            "type": "string",
            "example": "100"
          },
          "paymentMethod": {
            "example": "pix",
            "$ref": "#/components/schemas/PaymentMethodEnum"
          },
          "paymentProvider": {
            "example": "stripe",
            "$ref": "#/components/schemas/PaymentProviderEnum"
          },
          "providerInputs": {
            "type": "object",
            "example": {
              "ssn": "659.315.680-93",
              "save_credit_card": true,
              "save_credit_card_name": "My Credit Card"
            }
          }
        },
        "required": [
          "currencyId",
          "amountType",
          "amount"
        ]
      },
      "OrderSignedGasFeeDto": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb"
          },
          "signedGasFee": {
            "type": "string",
            "example": "===812hgsahbncva"
          }
        },
        "required": [
          "currencyId"
        ]
      },
      "UtmParamsDto": {
        "type": "object",
        "properties": {
          "utm_source": {
            "type": "string",
            "example": "google"
          },
          "utm_medium": {
            "type": "string",
            "example": "cpc"
          },
          "utm_campaign": {
            "type": "string",
            "example": "super_sales"
          },
          "utm_term": {
            "type": "string",
            "example": "nft"
          },
          "utm_content": {
            "type": "string",
            "example": "header_banner_link"
          }
        }
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "orderProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductDto"
            }
          },
          "addressId": {
            "type": "string",
            "format": "uuid",
            "example": null
          },
          "destinationWalletAddress": {
            "type": "string",
            "example": "0xd3304183ec1fa687e380b67419875f97f1db05f5"
          },
          "destinationUserId": {
            "type": "string",
            "format": "uuid"
          },
          "signedGasFee": {
            "type": "string",
            "example": "===812hgsahbncva",
            "deprecated": true
          },
          "signedGasFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderSignedGasFeeDto"
            }
          },
          "successUrl": {
            "type": "string",
            "example": "https://domain.com"
          },
          "utmParams": {
            "$ref": "#/components/schemas/UtmParamsDto"
          },
          "couponCode": {
            "type": "string",
            "example": "coupon-code"
          },
          "currencyId": {
            "type": "string",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb",
            "deprecated": true
          },
          "paymentMethod": {
            "example": "pix",
            "deprecated": true,
            "$ref": "#/components/schemas/PaymentMethodEnum"
          },
          "paymentProvider": {
            "example": "stripe",
            "deprecated": true,
            "$ref": "#/components/schemas/PaymentProviderEnum"
          },
          "providerInputs": {
            "type": "object",
            "example": {
              "ssn": "659.315.680-93",
              "save_credit_card": true,
              "save_credit_card_name": "My Credit Card"
            },
            "deprecated": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderMultiPaymentSelectionDto"
            }
          },
          "acceptSimilarOrderInShortPeriod": {
            "type": "object",
            "example": false,
            "default": false,
            "description": "When some user tries to create two similar orders in a short period of time, we consider it as an interaction error. Sending this value as true will skip this check and proceed with order creation"
          },
          "passShareCodeData": {
            "type": "object"
          }
        },
        "required": [
          "orderProducts",
          "signedGasFees",
          "payments"
        ]
      },
      "OrderProductPreviewDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid",
            "example": "3db843f4-1ee6-4f6e-a86d-b0aee938bdde"
          },
          "productTokenId": {
            "type": "string",
            "format": "uuid",
            "example": "3062cdc2-2bd8-4143-8a04-90fc1e607794"
          },
          "variantIds": {
            "example": [],
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "quantity": {
            "type": "string",
            "example": "1",
            "default": "1"
          }
        },
        "required": [
          "productId"
        ]
      },
      "OrderPreviewMultiPaymentSelectionDto": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string",
            "format": "uuid",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb"
          },
          "amountType": {
            "example": "percentage",
            "$ref": "#/components/schemas/MultiPaymentSelectionAmountTypeEnum"
          },
          "amount": {
            "type": "string",
            "example": "100"
          },
          "paymentMethod": {
            "example": "pix",
            "$ref": "#/components/schemas/PaymentMethodEnum"
          }
        },
        "required": [
          "currencyId",
          "amountType",
          "amount"
        ]
      },
      "OrderPreviewDto": {
        "type": "object",
        "properties": {
          "orderProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductPreviewDto"
            }
          },
          "acceptIncompleteCart": {
            "type": "object",
            "example": true,
            "default": true
          },
          "couponCode": {
            "type": "string",
            "example": "coupon-code"
          },
          "destinationWalletAddress": {
            "type": "string",
            "example": "0xd3304183ec1fa687e380b67419875f97f1db05f5"
          },
          "destinationUserId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyId": {
            "type": "string",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb",
            "deprecated": true
          },
          "paymentMethod": {
            "example": "pix",
            "deprecated": true,
            "$ref": "#/components/schemas/PaymentMethodEnum"
          },
          "anchorPaymentsCurrencyId": {
            "type": "string",
            "format": "uuid",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb",
            "default": null
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPreviewMultiPaymentSelectionDto"
            }
          }
        },
        "required": [
          "orderProducts",
          "payments"
        ]
      },
      "PayOrderDto": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderMultiPaymentSelectionDto"
            }
          },
          "successUrl": {
            "type": "string",
            "example": "https://domain.com"
          }
        },
        "required": [
          "payments"
        ]
      },
      "CompanyEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "AssetTypeEnum": {
        "type": "string",
        "enum": [
          "image",
          "video",
          "document"
        ]
      },
      "AssetStatusEnum": {
        "type": "string",
        "enum": [
          "waiting_upload",
          "waiting_association",
          "associated",
          "excluded",
          "expired"
        ]
      },
      "AssetProviderEnum": {
        "type": "string",
        "enum": [
          "cloudinary"
        ]
      },
      "AssetTargetEnum": {
        "type": "string",
        "enum": [
          "product",
          "order_document",
          "refund",
          "storefront_page",
          "storefront_theme",
          "export"
        ]
      },
      "AssetEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "type": {
            "example": "image",
            "$ref": "#/components/schemas/AssetTypeEnum"
          },
          "status": {
            "example": "associated",
            "$ref": "#/components/schemas/AssetStatusEnum"
          },
          "provider": {
            "example": "cloudinary",
            "$ref": "#/components/schemas/AssetProviderEnum"
          },
          "directLink": {
            "type": "string",
            "example": "https://dummyimage.com/200x200/fff/000"
          },
          "target": {
            "example": "product",
            "nullable": true,
            "$ref": "#/components/schemas/AssetTargetEnum"
          }
        },
        "required": [
          "id",
          "companyId",
          "type",
          "status",
          "provider"
        ]
      },
      "ExportTypeEnum": {
        "type": "string",
        "enum": [
          "orders_report",
          "order_products_report"
        ]
      },
      "ExportStatusEnum": {
        "type": "string",
        "enum": [
          "pending",
          "generating",
          "ready_for_download",
          "failed",
          "expired"
        ]
      },
      "ExportEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "example": "orders_report",
            "$ref": "#/components/schemas/ExportTypeEnum"
          },
          "status": {
            "example": "ready_for_download",
            "$ref": "#/components/schemas/ExportStatusEnum"
          },
          "readyForDownloadDate": {
            "format": "date-time",
            "type": "string"
          },
          "expiresIn": {
            "format": "date-time",
            "type": "string"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "asset": {
            "$ref": "#/components/schemas/AssetEntityDto"
          },
          "params": {
            "type": "object",
            "example": null
          }
        },
        "required": [
          "id",
          "companyId",
          "type",
          "status",
          "assetId",
          "asset"
        ]
      },
      "CreateOrderDocumentDto": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "assetId"
        ]
      },
      "OrderEntity": {
        "type": "object",
        "properties": {}
      },
      "AssetEntity": {
        "type": "object",
        "properties": {}
      },
      "OrderDocumentEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "$ref": "#/components/schemas/OrderEntity"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "asset": {
            "$ref": "#/components/schemas/AssetEntity"
          }
        },
        "required": [
          "id",
          "orderId",
          "order",
          "companyId",
          "assetId",
          "asset"
        ]
      },
      "OrderDocumentsEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDocumentEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "OrderStatusEnum": {
        "type": "string",
        "enum": [
          "pending",
          "confirming_payment",
          "waiting_delivery",
          "delivering",
          "concluded",
          "failed",
          "cancelled",
          "partially_cancelled",
          "expired"
        ]
      },
      "DispatchOrderEventDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "default": "concluded",
            "example": "concluded",
            "$ref": "#/components/schemas/OrderStatusEnum"
          }
        },
        "required": [
          "orderId",
          "status"
        ]
      },
      "ProductSortBy": {
        "type": "string",
        "enum": [
          "createdAt",
          "updatedAt",
          "startSaleAt",
          "endSaleAt",
          "status",
          "contractAddress",
          "name",
          "relevance"
        ]
      },
      "ImageVariantMatchDto": {
        "type": "object",
        "properties": {
          "keyLabel": {
            "type": "string"
          },
          "keyValue": {
            "type": "string"
          }
        },
        "required": [
          "keyLabel",
          "keyValue"
        ]
      },
      "ProductImageDto": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageVariantMatchDto"
            }
          }
        },
        "required": [
          "assetId"
        ]
      },
      "ProductPriceDto": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb"
          },
          "amount": {
            "type": "string",
            "example": "0.01"
          }
        },
        "required": [
          "currencyId",
          "amount"
        ]
      },
      "ProductDraftDto": {
        "type": "object",
        "properties": {
          "keyCollectionId": {
            "type": "string",
            "example": null
          },
          "range": {
            "type": "string",
            "example": null
          }
        }
      },
      "ProductKycRequirementConfigDto": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "slug"
        ]
      },
      "ProductRequirementDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "keyCollectionId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "requirementCTALabel": {
            "type": "string"
          },
          "requirementDescription": {
            "type": "string"
          },
          "requirementModalContent": {
            "type": "string"
          },
          "requireKycContext": {
            "$ref": "#/components/schemas/ProductKycRequirementConfigDto"
          }
        },
        "required": [
          "companyId",
          "keyCollectionId",
          "productId",
          "requirementCTALabel",
          "requirementDescription",
          "requirementModalContent"
        ]
      },
      "PassShareCodeDataFieldType": {
        "type": "string",
        "enum": [
          "textarea",
          "text"
        ]
      },
      "PassShareCodeDataFieldConfigDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "example": "text",
            "$ref": "#/components/schemas/PassShareCodeDataFieldType"
          },
          "label": {
            "type": "string"
          },
          "required": {
            "type": "boolean",
            "default": true,
            "example": true
          }
        },
        "required": [
          "name",
          "type",
          "label"
        ]
      },
      "PassShareCodeConfigDto": {
        "type": "object",
        "properties": {
          "dataFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PassShareCodeDataFieldConfigDto"
            }
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "example": true
          }
        },
        "required": [
          "enabled"
        ]
      },
      "ProductSettingsDto": {
        "type": "object",
        "properties": {
          "passShareCodeConfig": {
            "$ref": "#/components/schemas/PassShareCodeConfigDto"
          }
        }
      },
      "ProductDistributionType": {
        "type": "string",
        "enum": [
          "random",
          "fixed",
          "sequential"
        ]
      },
      "ProductPricingType": {
        "type": "string",
        "enum": [
          "product",
          "token"
        ]
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "tags": {
            "example": [
              "7ca74ed3-93ff-4df9-b8a0-8308c590174b"
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "name": {
            "type": "string",
            "example": "W3Block Product"
          },
          "description": {
            "type": "string",
            "example": "My Description"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImageDto"
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPriceDto"
            }
          },
          "distributionType": {
            "example": "random",
            "$ref": "#/components/schemas/ProductDistributionType"
          },
          "pricingType": {
            "example": "product",
            "$ref": "#/components/schemas/ProductPricingType"
          },
          "startSaleAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "endSaleAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "draftData": {
            "$ref": "#/components/schemas/ProductDraftDto"
          },
          "slug": {
            "type": "string"
          },
          "htmlContent": {
            "type": "object",
            "example": "<b>block</b>"
          },
          "onDemandMintEnabled": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "requirements": {
            "$ref": "#/components/schemas/ProductRequirementDto"
          },
          "terms": {
            "type": "object",
            "example": null
          },
          "relevance": {
            "type": "number",
            "default": 0,
            "example": 0
          },
          "settings": {
            "$ref": "#/components/schemas/ProductSettingsDto"
          }
        },
        "required": [
          "tags",
          "name",
          "description",
          "prices",
          "distributionType",
          "pricingType",
          "draftData"
        ]
      },
      "ProductEntity": {
        "type": "object",
        "properties": {}
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "tags": {
            "example": [
              "7ca74ed3-93ff-4df9-b8a0-8308c590174b"
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "name": {
            "type": "string",
            "example": "W3Block Product"
          },
          "description": {
            "type": "string",
            "example": "My Description"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImageDto"
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPriceDto"
            }
          },
          "distributionType": {
            "example": "random",
            "$ref": "#/components/schemas/ProductDistributionType"
          },
          "pricingType": {
            "example": "product",
            "$ref": "#/components/schemas/ProductPricingType"
          },
          "startSaleAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "endSaleAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "draftData": {
            "$ref": "#/components/schemas/ProductDraftDto"
          },
          "slug": {
            "type": "string"
          },
          "htmlContent": {
            "type": "object",
            "example": "<b>block</b>"
          },
          "onDemandMintEnabled": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "requirements": {
            "$ref": "#/components/schemas/ProductRequirementDto"
          },
          "terms": {
            "type": "object",
            "example": null
          },
          "relevance": {
            "type": "number",
            "default": 0,
            "example": 0
          },
          "settings": {
            "$ref": "#/components/schemas/ProductSettingsDto"
          }
        }
      },
      "ProductOrderRuleSortBy": {
        "type": "string",
        "enum": [
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateProductOrderRuleDto": {
        "type": "object",
        "properties": {
          "startAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "endAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "purchaseLimit": {
            "type": "number",
            "example": null
          },
          "whitelistId": {
            "type": "string",
            "format": "uuid",
            "default": null
          }
        }
      },
      "UpdateProductOrderRuleDto": {
        "type": "object",
        "properties": {
          "startAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "endAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "purchaseLimit": {
            "type": "number",
            "example": null
          },
          "whitelistId": {
            "type": "string",
            "format": "uuid",
            "default": null
          }
        }
      },
      "ResaleProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My Product"
          },
          "description": {
            "type": "string",
            "example": "A beautiful product"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImageDto"
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPriceDto"
            }
          },
          "contractAddress": {
            "type": "string",
            "example": "0xDAA50a02340cBcFA1a6F4c02765430Ffe411b125"
          },
          "chainId": {
            "type": "number",
            "example": 80001,
            "enum": [
              1,
              3,
              4,
              42,
              1337,
              80001,
              137,
              1284,
              1285
            ]
          },
          "tokenId": {
            "type": "string"
          },
          "startSaleAt": {
            "type": "object",
            "example": null
          },
          "endSaleAt": {
            "type": "object",
            "example": null
          }
        },
        "required": [
          "name",
          "description",
          "prices",
          "contractAddress",
          "chainId",
          "tokenId"
        ]
      },
      "ProductVariantEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "keyLabel": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "companyId",
          "productId",
          "name",
          "keyLabel"
        ]
      },
      "ProductVariantEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreateProductVariantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "keyLabel": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "keyLabel"
        ]
      },
      "UpdateProductVariantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "keyLabel": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "keyLabel"
        ]
      },
      "ProductVariantValueEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "variantId": {
            "type": "string",
            "format": "uuid"
          },
          "variant": {
            "$ref": "#/components/schemas/ProductVariantEntityDto"
          },
          "name": {
            "type": "string"
          },
          "keyValue": {
            "type": "string"
          },
          "extraAmount": {
            "type": "string",
            "default": "0",
            "example": "0"
          }
        },
        "required": [
          "id",
          "variantId",
          "name",
          "keyValue",
          "extraAmount"
        ]
      },
      "ProductVariantValueEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantValueEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreateProductVariantValueDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "keyValue": {
            "type": "string"
          },
          "extraAmount": {
            "type": "string",
            "example": "100"
          }
        },
        "required": [
          "name",
          "keyValue",
          "extraAmount"
        ]
      },
      "UserPaymentProviderEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentProvider": {
            "example": "stripe",
            "$ref": "#/components/schemas/PaymentProviderEnum"
          },
          "config": {
            "type": "object",
            "example": null
          },
          "enabled": {
            "type": "boolean",
            "default": false,
            "example": true
          }
        },
        "required": [
          "id",
          "userId",
          "paymentProvider",
          "enabled"
        ]
      },
      "UserPaymentProviderEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPaymentProviderEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "GetConfiguredProvidersResponseDto": {
        "type": "object",
        "properties": {
          "missingProviders": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "pagar_me",
                "paypal",
                "transfer",
                "stripe",
                "asaas",
                "crypto",
                "free",
                "braza"
              ]
            }
          },
          "providersEnabledOnCompany": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "pagar_me",
                "paypal",
                "transfer",
                "stripe",
                "asaas",
                "crypto",
                "free",
                "braza"
              ]
            }
          },
          "providersConfiguredByUser": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "pagar_me",
                "paypal",
                "transfer",
                "stripe",
                "asaas",
                "crypto",
                "free",
                "braza"
              ]
            }
          }
        },
        "required": [
          "missingProviders",
          "providersEnabledOnCompany",
          "providersConfiguredByUser"
        ]
      },
      "ConnectOrRefreshStripePaymentProviderDto": {
        "type": "object",
        "properties": {
          "successConnectUrl": {
            "type": "string"
          },
          "refreshConnectUrl": {
            "type": "string"
          }
        },
        "required": [
          "successConnectUrl",
          "refreshConnectUrl"
        ]
      },
      "StripeConnectAccountResponseDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ]
      },
      "ConfigureUserPaymentProviderDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "example": null,
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "PublicUserCreditCardEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "lastNumbers": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "lastNumbers"
        ]
      },
      "PublicUserCreditCardEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicUserCreditCardEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreditCardHolderInfoDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "ssn": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "postalCode": {
            "type": "string",
            "example": "00000-000"
          },
          "address": {
            "type": "string"
          },
          "addressNumber": {
            "type": "string"
          },
          "addressComplement": {
            "type": "string"
          }
        },
        "required": [
          "postalCode"
        ]
      },
      "SaveUserCreditCardDto": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string",
            "format": "uuid",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb"
          },
          "number": {
            "type": "string"
          },
          "cvv": {
            "type": "string"
          },
          "expiryMonth": {
            "type": "number",
            "example": 1
          },
          "expiryYear": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string"
          },
          "holderInfo": {
            "$ref": "#/components/schemas/CreditCardHolderInfoDto"
          }
        },
        "required": [
          "currencyId",
          "number",
          "cvv",
          "expiryMonth",
          "expiryYear",
          "holderInfo"
        ]
      },
      "CompanyWithEnabledStateResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean",
            "example": true,
            "default": true
          }
        },
        "required": [
          "id",
          "enabled"
        ]
      },
      "DeliverDelayDto": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "example": "credit_card",
            "$ref": "#/components/schemas/PaymentMethodEnum"
          },
          "delay": {
            "type": "number",
            "default": 0,
            "example": 259200000
          }
        },
        "required": [
          "paymentMethod",
          "delay"
        ]
      },
      "OrderExpirationConfigDto": {
        "type": "object",
        "properties": {
          "ignorePaymentsAfterExecutionOrder": {
            "type": "number"
          }
        },
        "required": [
          "ignorePaymentsAfterExecutionOrder"
        ]
      },
      "CompanyConfigurationEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "deliveryDelays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliverDelayDto"
            }
          },
          "logo": {
            "type": "string"
          },
          "operatorWalletAddress": {
            "type": "string"
          },
          "paymentProviders": {
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "clientServiceFeePercentage": {
            "type": "number"
          },
          "companyServiceFeePercentage": {
            "type": "number"
          },
          "resaleFeePercentage": {
            "type": "number"
          },
          "disableGasBilling": {
            "type": "boolean"
          },
          "sendPassPdf": {
            "type": "boolean"
          },
          "orderExpirationConfig": {
            "$ref": "#/components/schemas/OrderExpirationConfigDto"
          }
        },
        "required": [
          "id",
          "companyId",
          "clientServiceFeePercentage",
          "companyServiceFeePercentage",
          "resaleFeePercentage",
          "disableGasBilling",
          "sendPassPdf"
        ]
      },
      "UpdateCompanyConfigurationsDto": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "example": "https://w3block.io/images/1.png"
          },
          "deliverDelays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliverDelayDto"
            }
          },
          "resaleFeePercentage": {
            "type": "number",
            "default": 0,
            "example": 0
          },
          "orderExpirationConfig": {
            "$ref": "#/components/schemas/OrderExpirationConfigDto"
          }
        },
        "required": [
          "resaleFeePercentage"
        ]
      },
      "SetCompanyPaymentProviderSelectionDto": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string",
            "format": "uuid",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb"
          },
          "paymentProvider": {
            "example": "stripe",
            "$ref": "#/components/schemas/PaymentProviderEnum"
          },
          "paymentMethod": {
            "example": "pix",
            "default": null,
            "$ref": "#/components/schemas/PaymentMethodEnum"
          }
        },
        "required": [
          "currencyId",
          "paymentProvider"
        ]
      },
      "CreatePagarMePaymentProviderDto": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string"
          },
          "checkoutExpireTime": {
            "type": "number"
          },
          "successUrl": {
            "type": "string"
          }
        },
        "required": [
          "secretKey"
        ]
      },
      "CreatePaypalPaymentProviderDto": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "type": "string"
          },
          "checkoutExpireTime": {
            "type": "number"
          },
          "successUrl": {
            "type": "string"
          }
        },
        "required": [
          "secret",
          "clientId",
          "url"
        ]
      },
      "TransferTypeEnum": {
        "type": "string",
        "enum": [
          "pix",
          "bank_transfer"
        ]
      },
      "CreateTransferPaymentProviderDto": {
        "type": "object",
        "properties": {
          "checkoutExpireTime": {
            "type": "number"
          },
          "successUrl": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TransferTypeEnum"
          },
          "pixKey": {
            "type": "string"
          },
          "bankCode": {
            "type": "string"
          },
          "bankAgency": {
            "type": "string"
          },
          "bankAccount": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "CreateStripePaymentProviderDto": {
        "type": "object",
        "properties": {
          "successConnectUrl": {
            "type": "string"
          },
          "refreshConnectUrl": {
            "type": "string"
          },
          "withoutConnect": {
            "type": "boolean"
          },
          "checkoutExpireTime": {
            "type": "number"
          },
          "successUrl": {
            "type": "string"
          }
        },
        "required": [
          "successConnectUrl",
          "refreshConnectUrl"
        ]
      },
      "CreateAsaasPaymentProviderDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string"
          },
          "checkoutExpireTime": {
            "type": "number"
          }
        },
        "required": [
          "apiKey"
        ]
      },
      "NotificationTypeEnum": {
        "type": "string",
        "enum": [
          "admin_order_concluded",
          "admin_order_failed",
          "user_order_waiting_delivery",
          "user_order_concluded",
          "destination_user_order_waiting_delivery"
        ]
      },
      "EmailSenderDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": false
          },
          "name": {
            "type": "string",
            "nullable": false
          }
        },
        "required": [
          "email",
          "name"
        ]
      },
      "NotificationProviderEnum": {
        "type": "string",
        "enum": [
          "email",
          "twilio_whatsapp"
        ]
      },
      "CompanyNotificationEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "nullable": false,
            "$ref": "#/components/schemas/NotificationTypeEnum"
          },
          "provider": {
            "nullable": false,
            "$ref": "#/components/schemas/NotificationProviderEnum"
          },
          "disabled": {
            "type": "boolean"
          },
          "customSubject": {
            "type": "string",
            "nullable": true
          },
          "customHtmlContent": {
            "type": "string",
            "nullable": true
          },
          "customTextContent": {
            "type": "string",
            "nullable": true
          },
          "customTemplateId": {
            "type": "number",
            "nullable": true
          },
          "customParams": {
            "type": "object",
            "example": null,
            "default": null,
            "nullable": true
          },
          "customSender": {
            "nullable": true,
            "default": null,
            "example": null,
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailSenderDto"
              }
            ]
          },
          "bcc": {
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "companyId",
          "type",
          "provider",
          "disabled"
        ]
      },
      "SetCompanyNotificationDto": {
        "type": "object",
        "properties": {
          "disabled": {
            "type": "boolean",
            "example": false,
            "default": false
          },
          "customSubject": {
            "type": "string",
            "example": null,
            "default": null,
            "nullable": true
          },
          "customHtmlContent": {
            "type": "string",
            "example": null,
            "default": null,
            "nullable": true
          },
          "customTextContent": {
            "type": "string",
            "example": null,
            "default": null,
            "nullable": true
          },
          "customParams": {
            "type": "object",
            "example": null,
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "disabled",
          "customSubject",
          "customHtmlContent",
          "customTextContent",
          "customParams"
        ]
      },
      "CompanySplitConfigurationEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyConfigurationId": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "contractAddress": {
            "type": "string"
          },
          "chainId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "credit_card",
              "debit_card",
              "pix",
              "crypto",
              "transfer",
              "billet",
              "google_pay",
              "apple_pay"
            ],
            "example": "pix"
          },
          "paymentProvider": {
            "type": "string",
            "enum": [
              "pagar_me",
              "paypal",
              "transfer",
              "stripe",
              "asaas",
              "crypto",
              "free",
              "braza"
            ],
            "example": "asaas"
          },
          "type": {
            "type": "string",
            "enum": [
              "client_service_fee",
              "company_service_fee",
              "resale_fee",
              "gas_fee",
              "product_price"
            ],
            "example": "product_price"
          },
          "percentage": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "companyConfigurationId",
          "companyId",
          "userId",
          "type"
        ]
      },
      "CompanySplitConfigurationEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySplitConfigurationEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreateCompanySplitConfigurationDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "client_service_fee",
              "company_service_fee",
              "resale_fee",
              "gas_fee",
              "product_price"
            ],
            "example": "product_price"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "percentage": {
            "type": "number"
          },
          "description": {
            "type": "string",
            "example": null,
            "default": null,
            "nullable": true
          },
          "paymentProvider": {
            "type": "string",
            "enum": [
              "pagar_me",
              "paypal",
              "transfer",
              "stripe",
              "asaas",
              "crypto",
              "free",
              "braza"
            ],
            "example": null,
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "credit_card",
              "debit_card",
              "pix",
              "crypto",
              "transfer",
              "billet",
              "google_pay",
              "apple_pay"
            ],
            "example": null,
            "nullable": true
          },
          "contractAddress": {
            "type": "string",
            "nullable": true
          },
          "chainId": {
            "type": "number",
            "example": 1284,
            "enum": [
              1,
              3,
              4,
              42,
              1337,
              80001,
              137,
              1284,
              1285
            ],
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "type",
          "userId",
          "percentage"
        ]
      },
      "CompanySplitConfigurationEntityWithCorrelatedDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyConfigurationId": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "contractAddress": {
            "type": "string"
          },
          "chainId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "credit_card",
              "debit_card",
              "pix",
              "crypto",
              "transfer",
              "billet",
              "google_pay",
              "apple_pay"
            ],
            "example": "pix"
          },
          "paymentProvider": {
            "type": "string",
            "enum": [
              "pagar_me",
              "paypal",
              "transfer",
              "stripe",
              "asaas",
              "crypto",
              "free",
              "braza"
            ],
            "example": "asaas"
          },
          "type": {
            "type": "string",
            "enum": [
              "client_service_fee",
              "company_service_fee",
              "resale_fee",
              "gas_fee",
              "product_price"
            ],
            "example": "product_price"
          },
          "percentage": {
            "type": "number"
          },
          "correlatedConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySplitConfigurationEntityDto"
            }
          }
        },
        "required": [
          "id",
          "companyConfigurationId",
          "companyId",
          "userId",
          "type",
          "correlatedConfigurations"
        ]
      },
      "UpdateCompanySplitConfigurationDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": null,
            "default": null,
            "nullable": true
          },
          "paymentProvider": {
            "type": "string",
            "enum": [
              "pagar_me",
              "paypal",
              "transfer",
              "stripe",
              "asaas",
              "crypto",
              "free",
              "braza"
            ],
            "example": null,
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "credit_card",
              "debit_card",
              "pix",
              "crypto",
              "transfer",
              "billet",
              "google_pay",
              "apple_pay"
            ],
            "example": null,
            "nullable": true
          },
          "contractAddress": {
            "type": "string",
            "nullable": true
          },
          "chainId": {
            "type": "number",
            "example": 1284,
            "enum": [
              1,
              3,
              4,
              42,
              1337,
              80001,
              137,
              1284,
              1285
            ],
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "client_service_fee",
              "company_service_fee",
              "resale_fee",
              "gas_fee",
              "product_price"
            ],
            "example": "product_price"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "percentage": {
            "type": "number"
          }
        }
      },
      "CorrelatedSplitConfigurationsResponseDto": {
        "type": "object",
        "properties": {
          "correlatedConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySplitConfigurationEntityDto"
            }
          }
        },
        "required": [
          "correlatedConfigurations"
        ]
      },
      "SuperAdminCompanySetInfoDto": {
        "type": "object",
        "properties": {
          "clientServiceFeePercentage": {
            "type": "number",
            "default": 10,
            "example": 10
          },
          "companyServiceFeePercentage": {
            "type": "number",
            "default": 10,
            "example": 10
          },
          "disableGasBilling": {
            "type": "boolean",
            "default": false
          },
          "sendPassPdf": {
            "type": "boolean",
            "default": false,
            "example": false
          }
        },
        "required": [
          "clientServiceFeePercentage",
          "companyServiceFeePercentage",
          "disableGasBilling",
          "sendPassPdf"
        ]
      },
      "CurrencyPaymentProviderEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "currencyId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentProvider": {
            "$ref": "#/components/schemas/PaymentProviderEnum"
          }
        }
      },
      "CurrencyEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "crypto": {
            "type": "boolean"
          },
          "symbol": {
            "type": "string",
            "example": "$"
          },
          "code": {
            "type": "string",
            "example": "USD"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "example": null
          },
          "erc20contractAddress": {
            "type": "string",
            "example": "0x7dd80541ad31078244d9f2b73026a025e70b5484"
          },
          "erc20ChainId": {
            "type": "number",
            "example": 137
          },
          "paymentProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyPaymentProviderEntityDto"
            }
          },
          "configured": {
            "type": "boolean"
          },
          "canProvideCashback": {
            "type": "boolean"
          },
          "decimals": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "symbol",
          "code"
        ]
      },
      "CurrencyEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "HasAllowanceResponseDto": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/CurrencyEntityDto"
          },
          "walletAddress": {
            "type": "string"
          },
          "amount": {
            "type": "string",
            "example": "100"
          },
          "hasAllowance": {
            "type": "boolean",
            "example": true
          },
          "currentAllowance": {
            "type": "string",
            "example": "100"
          }
        },
        "required": [
          "currency",
          "walletAddress",
          "amount",
          "hasAllowance",
          "currentAllowance"
        ]
      },
      "IncreaseCurrencyAllowanceDto": {
        "type": "object",
        "properties": {
          "walletAddress": {
            "type": "string"
          },
          "targetAmount": {
            "type": "string",
            "example": "100"
          }
        },
        "required": [
          "targetAmount"
        ]
      },
      "TagDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Tag 1"
          },
          "parentId": {
            "type": "string",
            "example": null,
            "format": "uuid"
          },
          "hide": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "name",
          "hide"
        ]
      },
      "NestedTagsEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductEntity"
            }
          },
          "parentId": {
            "type": "string",
            "format": "uuid"
          },
          "hide": {
            "type": "boolean"
          }
        }
      },
      "TagEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductEntity"
            }
          },
          "parentId": {
            "type": "string",
            "format": "uuid"
          },
          "parent": {
            "$ref": "#/components/schemas/NestedTagsEntityDto"
          },
          "hide": {
            "type": "boolean"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NestedTagsEntityDto"
            }
          }
        },
        "required": [
          "id",
          "companyId",
          "name",
          "products",
          "hide",
          "children"
        ]
      },
      "TagsSortBy": {
        "type": "string",
        "enum": [
          "createdAt",
          "updatedAt",
          "parentId",
          "hide"
        ]
      },
      "TagsEntityPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "WebhooksConfigurationEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "webhookUrl": {
            "type": "string",
            "example": "https://mydomain.hook.me"
          },
          "signatureKey": {
            "type": "string"
          },
          "maxRetries": {
            "type": "number",
            "default": 5,
            "example": 5
          },
          "disabled": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "id",
          "companyId",
          "webhookUrl",
          "signatureKey",
          "disabled"
        ]
      },
      "WebhooksConfigurationEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhooksConfigurationEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreateOrUpdateWebhooksConfigurationDto": {
        "type": "object",
        "properties": {
          "webhookUrl": {
            "type": "string",
            "example": "https://w3block.io/webhooks/test"
          },
          "maxRetries": {
            "type": "number",
            "default": 5,
            "example": 5
          }
        },
        "required": [
          "webhookUrl"
        ]
      },
      "WebhookDataDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://mydomain.hook.me"
          },
          "headers": {
            "type": "object",
            "example": {
              "Authorization": "*******"
            }
          },
          "body": {
            "type": "object",
            "example": {
              "type": "purchase",
              "productId": "00000000-000000-00000-000"
            }
          }
        },
        "required": [
          "url"
        ]
      },
      "WebhookStatusEnum": {
        "type": "string",
        "enum": [
          "sending",
          "concluded",
          "failed"
        ]
      },
      "WebhookEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "configurationId": {
            "type": "string",
            "format": "uuid"
          },
          "configuration": {
            "$ref": "#/components/schemas/WebhooksConfigurationEntityDto"
          },
          "status": {
            "example": "concluded",
            "$ref": "#/components/schemas/WebhookStatusEnum"
          },
          "errors": {
            "type": "number",
            "default": 0,
            "example": 0
          },
          "data": {
            "default": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookDataDto"
              }
            ]
          },
          "lastResult": {
            "type": "object",
            "example": null
          },
          "usePatch": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "id",
          "companyId",
          "status",
          "errors",
          "data",
          "usePatch"
        ]
      },
      "WebhookEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "RequestAssetUploadDto": {
        "type": "object",
        "properties": {
          "type": {
            "default": "image",
            "example": "image",
            "$ref": "#/components/schemas/AssetTypeEnum"
          },
          "target": {
            "example": "product",
            "$ref": "#/components/schemas/AssetTargetEnum"
          }
        },
        "required": [
          "type",
          "target"
        ]
      },
      "CloudinaryProviderUploadParamsDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "example": "000000000000"
          },
          "timestamp": {
            "type": "number",
            "example": 1666215568
          },
          "publicId": {
            "type": "string",
            "example": "commerce/3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "signature": {
            "type": "string",
            "example": "bfd09f95f331f558cbd1320e67aa8d488770583e"
          },
          "signedParams": {
            "type": "string",
            "example": "filename_override=false&public_id=commerce/3fa85f64-5717-4562-b3fc-2c963f66afa6&timestamp=1666215568&unique_filename=true"
          },
          "queryParams": {
            "type": "object",
            "example": {
              "filename_override": "false",
              "public_id": "commerce/3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "timestamp": "1666215568",
              "unique_filename": "true"
            }
          }
        },
        "required": [
          "apiKey",
          "timestamp",
          "publicId",
          "signature",
          "signedParams",
          "queryParams"
        ]
      },
      "AssetEntityWithProviderUploadParamsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "type": {
            "example": "image",
            "$ref": "#/components/schemas/AssetTypeEnum"
          },
          "status": {
            "example": "associated",
            "$ref": "#/components/schemas/AssetStatusEnum"
          },
          "provider": {
            "example": "cloudinary",
            "$ref": "#/components/schemas/AssetProviderEnum"
          },
          "directLink": {
            "type": "string",
            "example": "https://dummyimage.com/200x200/fff/000"
          },
          "target": {
            "example": "product",
            "nullable": true,
            "$ref": "#/components/schemas/AssetTargetEnum"
          },
          "providerUploadParams": {
            "$ref": "#/components/schemas/CloudinaryProviderUploadParamsDto"
          }
        },
        "required": [
          "id",
          "companyId",
          "type",
          "status",
          "provider",
          "providerUploadParams"
        ]
      },
      "CheckCanCreateReferralResponseDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "canCreate": {
            "type": "boolean"
          }
        },
        "required": [
          "productId",
          "canCreate"
        ]
      },
      "PromotionRequirementsDto": {
        "type": "object",
        "properties": {
          "minCartPrice": {
            "type": "string"
          },
          "maxCartPrice": {
            "type": "string"
          },
          "minCartItems": {
            "type": "number"
          },
          "maxCartItems": {
            "type": "number"
          },
          "minSameCartItems": {
            "type": "number"
          },
          "maxSameCartItems": {
            "type": "number"
          },
          "paymentMethods": {
            "example": [
              "pix"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "currencyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "destinationWalletAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RewardAmountTypeEnum": {
        "type": "string",
        "enum": [
          "fixed",
          "percentage"
        ]
      },
      "RewardEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "amountType": {
            "example": "fixed",
            "$ref": "#/components/schemas/RewardAmountTypeEnum"
          },
          "amount": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "keyErc20ContractId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "promotionOwnerReward": {
            "type": "boolean"
          },
          "currencyId": {
            "type": "string",
            "format": "uuid"
          },
          "promotionOwnerWhitelistId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "userWhitelistId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "id",
          "companyId",
          "amountType",
          "amount",
          "isActive",
          "keyErc20ContractId",
          "productId",
          "promotionOwnerReward",
          "currencyId"
        ]
      },
      "PromotionTypeEnum": {
        "type": "string",
        "enum": [
          "coupon",
          "discount"
        ]
      },
      "PromotionAmountTypeEnum": {
        "type": "string",
        "enum": [
          "fixed",
          "percentage"
        ]
      },
      "ReferralPromotionEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "publicDescription": {
            "type": "string"
          },
          "type": {
            "example": "coupon",
            "$ref": "#/components/schemas/PromotionTypeEnum"
          },
          "amountType": {
            "example": "fixed",
            "$ref": "#/components/schemas/PromotionAmountTypeEnum"
          },
          "amount": {
            "type": "string"
          },
          "amountByCart": {
            "type": "boolean"
          },
          "code": {
            "type": "string"
          },
          "applyToAllProducts": {
            "type": "boolean"
          },
          "applyToAllUsers": {
            "type": "boolean"
          },
          "isCombinable": {
            "type": "boolean"
          },
          "startAt": {
            "format": "date-time",
            "type": "string"
          },
          "endAt": {
            "format": "date-time",
            "type": "string"
          },
          "usages": {
            "type": "number"
          },
          "maxUsages": {
            "type": "number"
          },
          "maxUsagesPerUser": {
            "type": "number"
          },
          "requirements": {
            "$ref": "#/components/schemas/PromotionRequirementsDto"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid"
          },
          "hasActiveRewards": {
            "type": "boolean"
          },
          "ownerRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardEntityDto"
            }
          },
          "userRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardEntityDto"
            }
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "id",
          "companyId",
          "description",
          "publicDescription",
          "type",
          "amountType",
          "amount",
          "amountByCart",
          "applyToAllProducts",
          "applyToAllUsers",
          "isCombinable",
          "usages",
          "hasActiveRewards",
          "ownerRewards",
          "userRewards",
          "productId"
        ]
      },
      "ReferralPromotionEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferralPromotionEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "ActivateUserReferralPromotionDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "productId"
        ]
      },
      "PromotionEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "publicDescription": {
            "type": "string"
          },
          "type": {
            "example": "coupon",
            "$ref": "#/components/schemas/PromotionTypeEnum"
          },
          "amountType": {
            "example": "fixed",
            "$ref": "#/components/schemas/PromotionAmountTypeEnum"
          },
          "amount": {
            "type": "string"
          },
          "amountByCart": {
            "type": "boolean"
          },
          "code": {
            "type": "string"
          },
          "applyToAllProducts": {
            "type": "boolean"
          },
          "applyToAllUsers": {
            "type": "boolean"
          },
          "isCombinable": {
            "type": "boolean"
          },
          "startAt": {
            "format": "date-time",
            "type": "string"
          },
          "endAt": {
            "format": "date-time",
            "type": "string"
          },
          "usages": {
            "type": "number"
          },
          "maxUsages": {
            "type": "number"
          },
          "maxUsagesPerUser": {
            "type": "number"
          },
          "requirements": {
            "$ref": "#/components/schemas/PromotionRequirementsDto"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "id",
          "companyId",
          "description",
          "publicDescription",
          "type",
          "amountType",
          "amount",
          "amountByCart",
          "applyToAllProducts",
          "applyToAllUsers",
          "isCombinable",
          "usages"
        ]
      },
      "PromotionEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreatePromotionDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "publicDescription": {
            "type": "string"
          },
          "type": {
            "example": "coupon",
            "$ref": "#/components/schemas/PromotionTypeEnum"
          },
          "amountType": {
            "example": "fixed",
            "$ref": "#/components/schemas/PromotionAmountTypeEnum"
          },
          "amount": {
            "type": "string"
          },
          "amountByCart": {
            "type": "boolean"
          },
          "code": {
            "type": "string"
          },
          "applyToAllProducts": {
            "type": "boolean"
          },
          "applyToAllUsers": {
            "type": "boolean"
          },
          "isCombinable": {
            "type": "boolean"
          },
          "startAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "endAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "maxUsages": {
            "type": "number",
            "nullable": true
          },
          "maxUsagesPerUser": {
            "type": "number",
            "nullable": true
          },
          "requirements": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PromotionRequirementsDto"
              }
            ]
          }
        },
        "required": [
          "publicDescription",
          "type",
          "amountType",
          "amount",
          "amountByCart",
          "applyToAllProducts",
          "applyToAllUsers",
          "isCombinable"
        ]
      },
      "UpdatePromotionDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "publicDescription": {
            "type": "string"
          },
          "type": {
            "example": "coupon",
            "$ref": "#/components/schemas/PromotionTypeEnum"
          },
          "amountType": {
            "example": "fixed",
            "$ref": "#/components/schemas/PromotionAmountTypeEnum"
          },
          "amount": {
            "type": "string"
          },
          "amountByCart": {
            "type": "boolean"
          },
          "code": {
            "type": "string"
          },
          "applyToAllProducts": {
            "type": "boolean"
          },
          "applyToAllUsers": {
            "type": "boolean"
          },
          "isCombinable": {
            "type": "boolean"
          },
          "startAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "endAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "maxUsages": {
            "type": "number",
            "nullable": true
          },
          "maxUsagesPerUser": {
            "type": "number",
            "nullable": true
          },
          "requirements": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PromotionRequirementsDto"
              }
            ]
          }
        },
        "required": [
          "publicDescription",
          "type",
          "amountType",
          "amount",
          "amountByCart",
          "applyToAllProducts",
          "applyToAllUsers",
          "isCombinable"
        ]
      },
      "PromotionProductEntityDto": {
        "type": "object",
        "properties": {
          "promotionId": {
            "type": "string",
            "format": "uuid"
          },
          "promotion": {
            "$ref": "#/components/schemas/PromotionEntityDto"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "usages": {
            "type": "number"
          },
          "maxUsages": {
            "type": "number"
          },
          "maxUsagesPerUser": {
            "type": "number"
          }
        },
        "required": [
          "promotionId",
          "promotion",
          "productId",
          "usages"
        ]
      },
      "PromotionProductEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionProductEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreatePromotionProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "maxUsages": {
            "type": "number"
          },
          "maxUsagesPerUser": {
            "type": "number"
          }
        },
        "required": [
          "productId"
        ]
      },
      "SetAndOverridePromotionProductsDto": {
        "type": "object",
        "properties": {
          "products": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePromotionProductDto"
            }
          }
        },
        "required": [
          "products"
        ]
      },
      "PromotionWhitelistTypeEnum": {
        "type": "string",
        "enum": [
          "w3block_id_whitelist",
          "email"
        ]
      },
      "PromotionWhitelistEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "promotionId": {
            "type": "string",
            "format": "uuid"
          },
          "promotion": {
            "$ref": "#/components/schemas/PromotionEntityDto"
          },
          "type": {
            "example": "w3block_id_whitelist",
            "$ref": "#/components/schemas/PromotionWhitelistTypeEnum"
          },
          "value": {
            "type": "string"
          },
          "usages": {
            "type": "number"
          },
          "maxUsages": {
            "type": "number"
          },
          "maxUsagesPerUser": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "promotionId",
          "promotion",
          "type",
          "value",
          "usages"
        ]
      },
      "PromotionWhitelistEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionWhitelistEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreatePromotionWhitelistDto": {
        "type": "object",
        "properties": {
          "type": {
            "example": "w3block_id_whitelist",
            "$ref": "#/components/schemas/PromotionWhitelistTypeEnum"
          },
          "value": {
            "type": "string",
            "example": "0xd3304183ec1fa687e380b67419875f97f1db05f5"
          },
          "maxUsages": {
            "type": "number"
          },
          "maxUsagesPerUser": {
            "type": "number"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "SetAndOverridePromotionWhitelistsDto": {
        "type": "object",
        "properties": {
          "whitelists": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePromotionWhitelistDto"
            }
          }
        },
        "required": [
          "whitelists"
        ]
      },
      "RewardEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreateRewardDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "promotionOwnerReward": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "keyErc20ContractId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyId": {
            "type": "string",
            "format": "uuid"
          },
          "amountType": {
            "example": "fixed",
            "$ref": "#/components/schemas/RewardAmountTypeEnum"
          },
          "amount": {
            "type": "string"
          },
          "promotionOwnerWhitelistId": {
            "type": "string",
            "format": "uuid"
          },
          "userWhitelistId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "productId",
          "promotionOwnerReward",
          "isActive",
          "keyErc20ContractId",
          "amountType",
          "amount"
        ]
      },
      "UpdateRewardDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "promotionOwnerReward": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "keyErc20ContractId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyId": {
            "type": "string",
            "format": "uuid"
          },
          "amountType": {
            "example": "fixed",
            "$ref": "#/components/schemas/RewardAmountTypeEnum"
          },
          "amount": {
            "type": "string"
          },
          "promotionOwnerWhitelistId": {
            "type": "string",
            "format": "uuid"
          },
          "userWhitelistId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "productId",
          "promotionOwnerReward",
          "isActive",
          "keyErc20ContractId",
          "amountType",
          "amount"
        ]
      },
      "ExportEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "OrdersAdminExportDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "example": "2022-01-30T10:30:40-03:00"
          },
          "sortBy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderBy": {
            "default": "DESC",
            "$ref": "#/components/schemas/OrderByEnum"
          },
          "status": {
            "type": "array",
            "example": [
              "pending"
            ],
            "items": {
              "type": "string",
              "enum": [
                "pending",
                "confirming_payment",
                "waiting_delivery",
                "delivering",
                "concluded",
                "failed",
                "cancelled",
                "partially_cancelled",
                "expired"
              ]
            }
          },
          "createdFrom": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "createdUntil": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentMethod": {
            "example": "pix",
            "$ref": "#/components/schemas/PaymentMethodEnum"
          },
          "paymentProvider": {
            "example": "stripe",
            "$ref": "#/components/schemas/PaymentProviderEnum"
          },
          "utmCampaign": {
            "type": "string",
            "example": "super_sales"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProjectHostEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "host": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "projectId",
          "host"
        ]
      },
      "ProjectEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectHostEntityDto"
            }
          }
        },
        "required": [
          "id",
          "companyId",
          "name",
          "hosts"
        ]
      },
      "ProjectEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "AttachProjectHostRequestDto": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "example": "subdomain.domain.io"
          }
        },
        "required": [
          "host"
        ]
      },
      "ProjectAuthTypeEnum": {
        "type": "string",
        "enum": [
          "all",
          "authenticated",
          "whitelist",
          "anonymous"
        ]
      },
      "ProjectAuthConfigDto": {
        "type": "object",
        "properties": {
          "type": {
            "default": "all",
            "example": "all",
            "$ref": "#/components/schemas/ProjectAuthTypeEnum"
          },
          "data": {
            "type": "object",
            "example": {
              "whitelists": []
            }
          },
          "redirectUrl": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "SetProjectPageRequestDto": {
        "type": "object",
        "properties": {
          "routePattern": {
            "type": "string",
            "example": "/"
          },
          "isRoutePatternRegex": {
            "type": "boolean",
            "example": false,
            "default": false
          },
          "data": {
            "type": "object",
            "example": null
          },
          "name": {
            "type": "string",
            "example": "My first page"
          },
          "auth": {
            "$ref": "#/components/schemas/ProjectAuthConfigDto"
          }
        },
        "required": [
          "routePattern"
        ]
      },
      "SetProjectThemeRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "example": null
          }
        }
      },
      "CreateProjectRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Project 1"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachProjectHostRequestDto"
            }
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetProjectPageRequestDto"
            }
          },
          "theme": {
            "$ref": "#/components/schemas/SetProjectThemeRequestDto"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateProjectRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Project 1"
          }
        },
        "required": [
          "name"
        ]
      },
      "ProjectHostCheckResponseDto": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "example": "subdomain.domain.io"
          },
          "available": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "host",
          "available"
        ]
      },
      "ProjectThemeEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectEntityDto"
          },
          "name": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "example": null
          }
        },
        "required": [
          "id",
          "companyId",
          "projectId",
          "isDefault"
        ]
      },
      "ProjectPageEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectEntityDto"
          },
          "routePattern": {
            "type": "string",
            "example": "/"
          },
          "routePatternRegex": {
            "type": "string",
            "example": "/"
          },
          "isRoutePatternRegex": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "example": null
          },
          "name": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "auth": {
            "example": {
              "type": "all"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectAuthConfigDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "companyId",
          "projectId",
          "routePattern",
          "isRoutePatternRegex",
          "isActive"
        ]
      },
      "ProjectPageEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectPageEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "DuplicateProjectPageRequestDto": {
        "type": "object",
        "properties": {
          "routePattern": {
            "type": "string",
            "example": "/"
          },
          "isRoutePatternRegex": {
            "type": "boolean",
            "example": false,
            "default": false
          },
          "name": {
            "type": "string",
            "example": "My first page"
          }
        },
        "required": [
          "routePattern",
          "isRoutePatternRegex"
        ]
      },
      "ComponentModuleSortByEnum": {
        "type": "string",
        "enum": [
          "createdAt",
          "updatedAt",
          "label"
        ]
      },
      "ComponentModuleEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "label": {
            "type": "string"
          },
          "contentForm": {
            "type": "object",
            "example": null
          },
          "styleForm": {
            "type": "object",
            "example": null
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "ComponentModuleEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentModuleEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreateComponentModuleRequestDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": "Header"
          },
          "contentForm": {
            "type": "object",
            "example": null
          },
          "styleForm": {
            "type": "object",
            "example": null
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "label"
        ]
      },
      "UpdateComponentModuleRequestDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": "Header"
          },
          "contentForm": {
            "type": "object",
            "example": null
          },
          "styleForm": {
            "type": "object",
            "example": null
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "label"
        ]
      },
      "I18nItemDto": {
        "type": "object",
        "properties": {
          "pt-br": {
            "type": "string",
            "example": "Algum texto em pt-br"
          },
          "en": {
            "type": "string",
            "example": "Some text in en"
          }
        },
        "required": [
          "pt-br",
          "en"
        ]
      },
      "FaqItemsEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "question": {
            "$ref": "#/components/schemas/I18nItemDto"
          },
          "answer": {
            "$ref": "#/components/schemas/I18nItemDto"
          },
          "externalUrl": {
            "type": "string",
            "example": "https://myquestion.should.move.to/"
          }
        },
        "required": [
          "id",
          "question",
          "answer"
        ]
      },
      "FaqItemsEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FaqItemsEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "FaqContextEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "name": {
            "type": "string",
            "example": "pre_sale"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "FaqContextEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FaqContextEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreateFaqContextDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "pre_sale"
          }
        },
        "required": [
          "name"
        ]
      },
      "FaqContextItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "relevance": {
            "type": "number",
            "default": 0,
            "example": 0
          }
        },
        "required": [
          "id",
          "relevance"
        ]
      },
      "CreateFaqContextItemDto": {
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/I18nItemDto"
          },
          "answer": {
            "$ref": "#/components/schemas/I18nItemDto"
          },
          "externalUrl": {
            "type": "string",
            "example": "https://myquestion.should.move.to/"
          },
          "contexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FaqContextItemDto"
            }
          }
        },
        "required": [
          "question",
          "answer",
          "contexts"
        ]
      }
    }
  }
}