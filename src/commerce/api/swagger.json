{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "getNodeEnv",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Util"
        ]
      }
    },
    "/health/liveness": {
      "get": {
        "operationId": "getLiveness",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Util"
        ]
      }
    },
    "/health/readiness": {
      "get": {
        "operationId": "getReadiness",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Util"
        ]
      }
    },
    "/migrations/run": {
      "post": {
        "operationId": "runMigrations",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Util"
        ]
      }
    },
    "/migrations/revert": {
      "post": {
        "operationId": "revertMigrations",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Util"
        ]
      }
    },
    "/migrations/pending": {
      "get": {
        "operationId": "getPendingMigrations",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Util"
        ]
      }
    },
    "/migrations/list": {
      "get": {
        "operationId": "getAllMigrations",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Util"
        ]
      }
    },
    "/health/metrics": {
      "get": {
        "operationId": "index",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/globals/blockchain/gas-price": {
      "get": {
        "operationId": "getGasPrice",
        "summary": "",
        "description": "Gets currently blockchain operations estimated prices for each enabled chain and currencies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Gas price was successfully got",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GasPriceResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Globals"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/webhooks/blockchain/transaction": {
      "post": {
        "operationId": "receiveBcsTransactionWebhook",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-pixchain-signature",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized - Invalid Pixchain signature"
          }
        },
        "tags": [
          "Blockchain Webhooks"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/webhooks/blockchain/event": {
      "post": {
        "operationId": "receiveBcsEventLogWebhook",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-pixchain-signature",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized - Invalid Pixchain signature"
          }
        },
        "tags": [
          "Blockchain Webhooks"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/orders": {
      "get": {
        "operationId": "listUserOrders",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": "pending",
            "schema": {
              "$ref": "#/components/schemas/OrderStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createOrder",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/orders/{orderId}": {
      "get": {
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/orders/preview": {
      "post": {
        "operationId": "computeOrderPreview",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPreviewDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: user, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders": {
      "get": {
        "operationId": "listOrders",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": "pending",
            "schema": {
              "$ref": "#/components/schemas/OrderStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders/{orderId}/cancel": {
      "patch": {
        "operationId": "cancelOrder",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/orders/{orderId}/force-deliver": {
      "patch": {
        "operationId": "forceOrderDeliver",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Orders (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/products": {
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/ProductSortBy"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "includeMetadata",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Includes first product token found metadata for each product. (Works good if you want to get some common NFT metadata attributes that is applied for all contract tokens)",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/products/{productId}/can-purchase": {
      "get": {
        "operationId": "canPurchaseProduct",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products": {
      "post": {
        "operationId": "create",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEntity"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/ProductSortBy"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "includeMetadata",
            "required": false,
            "in": "query",
            "example": false,
            "description": "Includes first product token found metadata for each product. (Works good if you want to get some common NFT metadata attributes that is applied for all contract tokens)",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": null,
            "schema": {
              "$ref": "#/components/schemas/ProductStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/find-by-slug/{slug}": {
      "get": {
        "operationId": "findBySlug",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}": {
      "get": {
        "operationId": "getById",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateById",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/publish": {
      "patch": {
        "operationId": "publish",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/order-rules": {
      "get": {
        "operationId": "findProductOrderRules",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/ProductOrderRuleSortBy"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createProductOrderRule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductOrderRuleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/products/{productId}/order-rules/{orderRuleId}": {
      "get": {
        "operationId": "getProductOrderRule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderRuleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateProductOrderRule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderRuleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductOrderRuleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteProductOrderRule",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderRuleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Products (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/globals/currencies": {
      "get": {
        "operationId": "listCurrencies",
        "summary": "",
        "description": "Lists system available currencies and its supported payment providers",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Currencies was successfully got",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyEntityPaginatedDto"
                }
              }
            }
          }
        },
        "tags": [
          "Globals"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/tags": {
      "post": {
        "operationId": "create",
        "summary": "",
        "description": "Create a company tag",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Tags (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "get": {
        "operationId": "findAll",
        "summary": "",
        "description": "Get all company tags paginated",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/TagsSortBy"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsEntityPaginated"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Tags (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/tags/{id}": {
      "get": {
        "operationId": "getById",
        "summary": "",
        "description": "Get some company tag by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Tags (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateById",
        "summary": "",
        "description": "Updates some company tag",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Tags (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations": {
      "get": {
        "operationId": "getCompanyConfigurations",
        "summary": "",
        "description": "Gets company configurations",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateCompanyConfigurations",
        "summary": "",
        "description": "Updates company configurations",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanyConfigurationsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/currencies/{currencyId}": {
      "patch": {
        "operationId": "setCompanyCurrencyPaymentProvider",
        "summary": "",
        "description": "Set a company payment provider to be used in some currency purchases",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currencyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCompanyCurrencyPaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/pagar-me": {
      "patch": {
        "operationId": "createPagarMePaymentProvider",
        "summary": "",
        "description": "Configures/Refresh configuration of Pagar.me payment provider in the company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePagarMePaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/paypal": {
      "patch": {
        "operationId": "createPaypalPaymentProvider",
        "summary": "",
        "description": "Configures/Refresh configuration of Paypal payment provider in the company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaypalPaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/stripe": {
      "patch": {
        "operationId": "createStripePaymentProvider",
        "summary": "",
        "description": "Request a configuration of Stripe payment provider in the company (needs to be finished with oauth connection)",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStripePaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConnectAccountResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/stripe/finish-connection": {
      "patch": {
        "operationId": "successCreateStripePaymentProvider",
        "summary": "",
        "description": "Finish connection of Stripe payment provider configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/stripe/refresh-connection": {
      "patch": {
        "operationId": "refreshStripePaymentProvider",
        "summary": "",
        "description": "Refresh Stripe payment provider connection",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshStripePaymentProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConnectAccountResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/configurations/providers/{provider}": {
      "delete": {
        "operationId": "deletePaymentProvider",
        "summary": "",
        "description": "Deletes some company payment provider configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "example": "pagar_me",
            "schema": {
              "$ref": "#/components/schemas/PaymentProviderEnum"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations": {
      "get": {
        "operationId": "listCompanyWebhooksConfigurations",
        "summary": "",
        "description": "Lists all company webhooks configurations",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksConfigurationEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createCompanyWebhooksConfiguration",
        "summary": "",
        "description": "Creates a new company webhooks configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateWebhooksConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations/{configurationId}": {
      "get": {
        "operationId": "getCompanyWebhookConfiguration",
        "summary": "",
        "description": "Gets some company webhooks configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateCompanyWebhooksConfiguration",
        "summary": "",
        "description": "Updates some company webhooks configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateWebhooksConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksConfigurationEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations/{configurationId}/enable": {
      "patch": {
        "operationId": "enableCompanyWebhooksConfiguration",
        "summary": "",
        "description": "Enables some company webhooks configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations/{configurationId}/disable": {
      "patch": {
        "operationId": "disableCompanyWebhooksConfiguration",
        "summary": "",
        "description": "Disables some company webhooks configuration",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations/{configurationId}/webhooks": {
      "get": {
        "operationId": "listCompanyWebhooksConfigurationWebhooks",
        "summary": "",
        "description": "Lists all webhooks sent using some webhooks configuration of company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/webhooks-configurations/{configurationId}/webhooks/{webhookId}": {
      "get": {
        "operationId": "getCompanyWebhookConfigurationWebhook",
        "summary": "",
        "description": "Gets some company webhooks configuration sent webhook",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configurationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhookId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Companies Webhooks Configurations (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/assets": {
      "post": {
        "operationId": "requestUpload",
        "summary": "",
        "description": "Creates a new request to upload some asset (image or video) in our service. You must use this endpoint response to upload assets using the specific provider apis (ex: Cloudinary)",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAssetUploadDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asset upload request successfully created!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetEntityWithSignatureDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Assets (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/companies/{companyId}/faq": {
      "get": {
        "operationId": "getFaqByContext",
        "summary": "",
        "description": "Lists FAQ items (questions/answers) inside a context by name including global faq contexts and specific company faq context items",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "contextId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "example": "pre_sale",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityPaginatedDto"
                }
              }
            }
          }
        },
        "tags": [
          "Faq"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/contexts": {
      "get": {
        "operationId": "listCompanyFaqContexts",
        "summary": "",
        "description": "Lists all company FAQ contexts",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqContextEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "create",
        "summary": "",
        "description": "Creates a new FAQ context for a company",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFaqContextDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqContextEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/contexts/{contextId}": {
      "get": {
        "operationId": "getContextById",
        "summary": "",
        "description": "Gets a company FAQ context",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqContextEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "update",
        "summary": "",
        "description": "Updates some company FAQ context",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFaqContextDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqContextEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/contexts/{contextId}/items": {
      "get": {
        "operationId": "listCompanyFaqContextsItems",
        "summary": "",
        "description": "Lists all FAQ items inside some company context",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/contexts/{contextId}/items/{faqItemId}": {
      "get": {
        "operationId": "getFaqContextItemById",
        "summary": "",
        "description": "Gets company context FAQ item by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faqItemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/items": {
      "get": {
        "operationId": "listCompanyFaqItems",
        "summary": "",
        "description": "Lists all company FAQ items which are associated to some company context",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityPaginatedDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "post": {
        "operationId": "createFaqItem",
        "summary": "",
        "description": "Creates a new FAQ item inside one or more company contexts",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFaqContextItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    },
    "/admin/companies/{companyId}/faq/items/{faqItemId}": {
      "get": {
        "operationId": "getFaqItemById",
        "summary": "",
        "description": "Gets a company FAQ item by id",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faqItemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      },
      "patch": {
        "operationId": "updateFaqItem",
        "summary": "",
        "description": "Updates some FAQ item and associate/disassociate it contexts",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faqItemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFaqContextItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqItemsEntityDto"
                }
              }
            }
          },
          "401": {
            "description": "User doesn't have any of the expected roles: administrator, admin, superAdmin, integration, application"
          }
        },
        "tags": [
          "Faq (Admin)"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "commerce-backend",
    "description": "",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://commerce.stg.pixway.io",
      "description": "W3Block Commerce Server",
      "variables": {}
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      },
      "x-w3block-api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-w3block-api-key",
        "description": "W3block API key"
      },
      "x-w3block-id": {
        "type": "apiKey",
        "in": "header",
        "name": "x-w3block-id",
        "description": "W3block API ID"
      },
      "x-w3block-secret": {
        "type": "apiKey",
        "in": "header",
        "name": "x-w3block-secret",
        "description": "W3block API Secret"
      }
    },
    "schemas": {
      "CurrencyGasPriceDto": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "example": "USD",
            "description": "Currency name"
          },
          "amount": {
            "type": "string",
            "example": "0.0002",
            "description": "current gas price on the chain/currency"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "GasPriceChainItemsDto": {
        "type": "object",
        "properties": {
          "1": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyGasPriceDto"
            }
          },
          "3": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyGasPriceDto"
            }
          },
          "4": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyGasPriceDto"
            }
          },
          "42": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyGasPriceDto"
            }
          },
          "137": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyGasPriceDto"
            }
          },
          "1337": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyGasPriceDto"
            }
          },
          "80001": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyGasPriceDto"
            }
          }
        }
      },
      "GasPriceResponseDto": {
        "type": "object",
        "properties": {
          "transfer": {
            "description": "Gas prices for transfer transaction (price per each NFT)",
            "allOf": [
              {
                "$ref": "#/components/schemas/GasPriceChainItemsDto"
              }
            ]
          }
        },
        "required": [
          "transfer"
        ]
      },
      "OrderByEnum": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "OrderStatusEnum": {
        "type": "string",
        "enum": [
          "pending",
          "confirming_payment",
          "waiting_delivery",
          "delivering",
          "concluded",
          "failed",
          "cancelled",
          "expired"
        ]
      },
      "PaginationMetaDto": {
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "number",
            "example": 1
          },
          "totalItems": {
            "type": "number",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "example": 1
          },
          "totalPages": {
            "type": "number",
            "example": 1
          },
          "currentPage": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "itemCount",
          "itemsPerPage",
          "currentPage"
        ]
      },
      "PaginationLinksDto": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "example": "http://example.com?page=1"
          },
          "prev": {
            "type": "string",
            "example": "http://example.com?page=1"
          },
          "next": {
            "type": "string",
            "example": "http://example.com?page=2"
          },
          "last": {
            "type": "string",
            "example": "http://example.com?page=3"
          }
        }
      },
      "CompanyEntity": {
        "type": "object",
        "properties": {}
      },
      "UserEntity": {
        "type": "object",
        "properties": {}
      },
      "AddressEntity": {
        "type": "object",
        "properties": {}
      },
      "CurrencyEntity": {
        "type": "object",
        "properties": {}
      },
      "OrderProductEntity": {
        "type": "object",
        "properties": {}
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "pending",
          "confirming_payment",
          "waiting_delivery",
          "delivering",
          "concluded",
          "failed",
          "cancelled",
          "expired"
        ]
      },
      "PaymentProvider": {
        "type": "string",
        "enum": [
          "pagar_me",
          "paypal",
          "stripe"
        ]
      },
      "PaymentMethod": {
        "type": "string",
        "enum": [
          "credit_card",
          "pix",
          "crypto"
        ]
      },
      "OrderEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntity"
          },
          "userId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "destinationWalletAddress": {
            "type": "string"
          },
          "addressId": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AddressEntity"
          },
          "currencyId": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyEntity"
          },
          "currencyAmount": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductEntity"
            }
          },
          "status": {
            "default": "pending",
            "example": "pending",
            "$ref": "#/components/schemas/OrderStatus"
          },
          "paymentProvider": {
            "example": "pagar_me",
            "$ref": "#/components/schemas/PaymentProvider"
          },
          "providerTransactionId": {
            "type": "object",
            "example": "za_1012skak1"
          },
          "paymentMethod": {
            "example": "credit_card",
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentInfo": {
            "type": "object",
            "example": {
              "paymentUrl": "https://example.com/order/1/pay"
            }
          },
          "deliverDate": {
            "format": "date-time",
            "type": "string"
          },
          "expiresIn": {
            "format": "date-time",
            "type": "string"
          },
          "gasFee": {
            "type": "string"
          },
          "clientServiceFee": {
            "type": "string"
          },
          "serviceFee": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "companyId",
          "userId",
          "destinationWalletAddress",
          "addressId",
          "currencyId",
          "currencyAmount",
          "products",
          "status",
          "paymentInfo",
          "gasFee",
          "clientServiceFee",
          "serviceFee"
        ]
      },
      "OrderEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "OrderProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "3db843f4-1ee6-4f6e-a86d-b0aee938bdde"
          },
          "productTokenId": {
            "type": "string",
            "example": "3062cdc2-2bd8-4143-8a04-90fc1e607794"
          },
          "expectedPrice": {
            "type": "string",
            "example": "100"
          }
        },
        "required": [
          "productId",
          "expectedPrice"
        ]
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "orderProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductDto"
            }
          },
          "currencyId": {
            "type": "string",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb"
          },
          "addressId": {
            "type": "string",
            "example": null
          },
          "destinationWalletAddress": {
            "type": "string",
            "example": "0xd3304183ec1fa687e380b67419875f97f1db05f5"
          },
          "signedGasFee": {
            "type": "string",
            "example": "===812hgsahbncva"
          },
          "successUrl": {
            "type": "string",
            "example": "https://domain.com"
          }
        },
        "required": [
          "orderProducts",
          "currencyId",
          "signedGasFee"
        ]
      },
      "OrderProductPreviewDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "3db843f4-1ee6-4f6e-a86d-b0aee938bdde"
          },
          "productTokenId": {
            "type": "string",
            "example": "3062cdc2-2bd8-4143-8a04-90fc1e607794"
          }
        },
        "required": [
          "productId"
        ]
      },
      "OrderPreviewDto": {
        "type": "object",
        "properties": {
          "orderProducts": {
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "currencyId": {
            "type": "string",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb"
          }
        },
        "required": [
          "orderProducts",
          "currencyId"
        ]
      },
      "ProductSortBy": {
        "type": "string",
        "enum": [
          "createdAt",
          "updatedAt",
          "startSaleAt",
          "endSaleAt",
          "status",
          "contractAddress",
          "name"
        ]
      },
      "ImageDto": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "assetId"
        ]
      },
      "ProductPriceDto": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string",
            "example": "65fe1119-6ec0-4b78-8d30-cb989914bdcb"
          },
          "amount": {
            "type": "string",
            "example": "0.01"
          }
        },
        "required": [
          "currencyId",
          "amount"
        ]
      },
      "ProductDraftDto": {
        "type": "object",
        "properties": {
          "keyCollectionId": {
            "type": "string",
            "example": null
          },
          "range": {
            "type": "string",
            "example": null
          }
        }
      },
      "ProductDistributionType": {
        "type": "string",
        "enum": [
          "random",
          "fixed",
          "sequential"
        ]
      },
      "ProductPricingType": {
        "type": "string",
        "enum": [
          "product",
          "token"
        ]
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "tags": {
            "example": [
              "7ca74ed3-93ff-4df9-b8a0-8308c590174b"
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "name": {
            "type": "string",
            "example": "W3"
          },
          "description": {
            "type": "string",
            "example": "block"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageDto"
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPriceDto"
            }
          },
          "distributionType": {
            "example": "random",
            "$ref": "#/components/schemas/ProductDistributionType"
          },
          "pricingType": {
            "example": "product",
            "$ref": "#/components/schemas/ProductPricingType"
          },
          "startSaleAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "endSaleAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "draftData": {
            "$ref": "#/components/schemas/ProductDraftDto"
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "tags",
          "name",
          "description",
          "prices",
          "distributionType",
          "pricingType",
          "draftData"
        ]
      },
      "ProductEntity": {
        "type": "object",
        "properties": {}
      },
      "ProductStatus": {
        "type": "string",
        "enum": [
          "draft",
          "publishing",
          "published"
        ]
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "tags": {
            "example": [
              "7ca74ed3-93ff-4df9-b8a0-8308c590174b"
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "name": {
            "type": "string",
            "example": "W3"
          },
          "description": {
            "type": "string",
            "example": "block"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageDto"
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPriceDto"
            }
          },
          "distributionType": {
            "example": "random",
            "$ref": "#/components/schemas/ProductDistributionType"
          },
          "pricingType": {
            "example": "product",
            "$ref": "#/components/schemas/ProductPricingType"
          },
          "startSaleAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "endSaleAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "draftData": {
            "$ref": "#/components/schemas/ProductDraftDto"
          },
          "slug": {
            "type": "string"
          }
        }
      },
      "ProductOrderRuleSortBy": {
        "type": "string",
        "enum": [
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateProductOrderRuleDto": {
        "type": "object",
        "properties": {
          "startAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "endAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "purchaseLimit": {
            "type": "number",
            "example": null
          },
          "whitelistId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "whitelistId"
        ]
      },
      "UpdateProductOrderRuleDto": {
        "type": "object",
        "properties": {
          "startAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "endAt": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "purchaseLimit": {
            "type": "number",
            "example": null
          },
          "whitelistId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PaymentProviderEnum": {
        "type": "string",
        "enum": [
          "pagar_me",
          "paypal",
          "stripe"
        ]
      },
      "CurrencyPaymentProviderEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "currencyId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentProvider": {
            "$ref": "#/components/schemas/PaymentProviderEnum"
          }
        }
      },
      "CurrencyEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "crypto": {
            "type": "boolean"
          },
          "paymentProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyPaymentProviderEntityDto"
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "CurrencyEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "TagDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Tag 1"
          },
          "parentId": {
            "type": "string",
            "example": null,
            "format": "uuid"
          },
          "hide": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "name",
          "hide"
        ]
      },
      "NestedTagsEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductEntity"
            }
          },
          "parentId": {
            "type": "string",
            "format": "uuid"
          },
          "hide": {
            "type": "boolean"
          }
        }
      },
      "TagsEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductEntity"
            }
          },
          "parentId": {
            "type": "string",
            "format": "uuid"
          },
          "parent": {
            "$ref": "#/components/schemas/NestedTagsEntityDto"
          },
          "hide": {
            "type": "boolean"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NestedTagsEntityDto"
            }
          }
        },
        "required": [
          "id",
          "companyId",
          "name",
          "products",
          "hide",
          "children"
        ]
      },
      "TagsSortBy": {
        "type": "string",
        "enum": [
          "createdAt",
          "updatedAt",
          "parentId",
          "hide"
        ]
      },
      "TagsEntityPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagsEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CompanyEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "ImageResponseDto": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "format": "uuid"
          },
          "thumb": {
            "type": "string",
            "example": "https://dummyimage.com/200x200/fff/000"
          },
          "original": {
            "type": "string",
            "example": "https://dummyimage.com/600x400/fff/000"
          }
        },
        "required": [
          "assetId",
          "thumb",
          "original"
        ]
      },
      "BannerResponseDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "Banner description"
          },
          "buttonText": {
            "type": "string",
            "example": "Click"
          },
          "buttonLink": {
            "type": "string",
            "example": "https://w3block.io"
          },
          "image": {
            "$ref": "#/components/schemas/ImageResponseDto"
          }
        },
        "required": [
          "image"
        ]
      },
      "DeliverDelayDto": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "example": "credit_card",
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "delay": {
            "type": "number",
            "default": 0,
            "example": 259200000
          }
        },
        "required": [
          "paymentMethod",
          "delay"
        ]
      },
      "CompanyConfigurationEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "banners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BannerResponseDto"
            }
          },
          "deliveryDelays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliverDelayDto"
            }
          },
          "domain": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "operatorWalletAddress": {
            "type": "string"
          },
          "paymentProviders": {
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "clientServiceFeePercentage": {
            "type": "number"
          },
          "companyServiceFeePercentage": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "companyId",
          "clientServiceFeePercentage",
          "companyServiceFeePercentage"
        ]
      },
      "BannerDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "Banner description"
          },
          "buttonText": {
            "type": "string",
            "example": "Click"
          },
          "buttonLink": {
            "type": "string",
            "example": "https://w3block.io"
          },
          "image": {
            "$ref": "#/components/schemas/ImageDto"
          }
        },
        "required": [
          "image"
        ]
      },
      "UpdateCompanyConfigurationsDto": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "example": "https://w3block.io/images/1.png"
          },
          "banners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BannerDto"
            }
          },
          "deliverDelays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliverDelayDto"
            }
          }
        }
      },
      "SetCompanyCurrencyPaymentProviderDto": {
        "type": "object",
        "properties": {
          "paymentProvider": {
            "example": "pagar_me",
            "$ref": "#/components/schemas/PaymentProviderEnum"
          }
        },
        "required": [
          "paymentProvider"
        ]
      },
      "CreatePagarMePaymentProviderDto": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string"
          },
          "checkoutExpireTime": {
            "type": "number"
          },
          "successUrl": {
            "type": "string"
          }
        },
        "required": [
          "secretKey"
        ]
      },
      "CreatePaypalPaymentProviderDto": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "type": "string"
          },
          "checkoutExpireTime": {
            "type": "number"
          },
          "successUrl": {
            "type": "string"
          }
        },
        "required": [
          "secret",
          "clientId",
          "url"
        ]
      },
      "CreateStripePaymentProviderDto": {
        "type": "object",
        "properties": {
          "successConnectUrl": {
            "type": "string"
          },
          "refreshConnectUrl": {
            "type": "string"
          },
          "checkoutExpireTime": {
            "type": "number"
          },
          "successUrl": {
            "type": "string"
          }
        },
        "required": [
          "successConnectUrl",
          "refreshConnectUrl"
        ]
      },
      "StripeConnectAccountResponseDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ]
      },
      "RefreshStripePaymentProviderDto": {
        "type": "object",
        "properties": {
          "successConnectUrl": {
            "type": "string"
          },
          "refreshConnectUrl": {
            "type": "string"
          }
        },
        "required": [
          "successConnectUrl",
          "refreshConnectUrl"
        ]
      },
      "WebhooksConfigurationEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "webhookUrl": {
            "type": "string",
            "example": "https://mydomain.hook.me"
          },
          "signatureKey": {
            "type": "string"
          },
          "maxRetries": {
            "type": "number",
            "default": 5,
            "example": 5
          },
          "disabled": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "id",
          "companyId",
          "webhookUrl",
          "signatureKey",
          "disabled"
        ]
      },
      "WebhooksConfigurationEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhooksConfigurationEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreateOrUpdateWebhooksConfigurationDto": {
        "type": "object",
        "properties": {
          "webhookUrl": {
            "type": "string",
            "example": "https://w3block.io/webhooks/test"
          },
          "maxRetries": {
            "type": "number",
            "default": 5,
            "example": 5
          }
        },
        "required": [
          "webhookUrl"
        ]
      },
      "WebhookDataDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://mydomain.hook.me"
          },
          "headers": {
            "type": "object",
            "example": {
              "Authorization": "*******"
            }
          },
          "body": {
            "type": "object",
            "example": {
              "type": "purchase",
              "productId": "00000000-000000-00000-000"
            }
          }
        },
        "required": [
          "url"
        ]
      },
      "WebhookStatusEnum": {
        "type": "string",
        "enum": [
          "sending",
          "concluded",
          "failed"
        ]
      },
      "WebhookEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "configurationId": {
            "type": "string",
            "format": "uuid"
          },
          "configuration": {
            "$ref": "#/components/schemas/WebhooksConfigurationEntityDto"
          },
          "status": {
            "example": "concluded",
            "$ref": "#/components/schemas/WebhookStatusEnum"
          },
          "errors": {
            "type": "number",
            "default": 0,
            "example": 0
          },
          "data": {
            "default": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookDataDto"
              }
            ]
          },
          "lastResult": {
            "type": "object",
            "example": null
          }
        },
        "required": [
          "id",
          "companyId",
          "status",
          "errors",
          "data"
        ]
      },
      "WebhookEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "AssetTypeEnum": {
        "type": "string",
        "enum": [
          "image",
          "video"
        ]
      },
      "RequestAssetUploadDto": {
        "type": "object",
        "properties": {
          "type": {
            "default": "image",
            "example": "image",
            "$ref": "#/components/schemas/AssetTypeEnum"
          }
        },
        "required": [
          "type"
        ]
      },
      "AssetStatusEnum": {
        "type": "string",
        "enum": [
          "waiting_upload",
          "waiting_association",
          "associated",
          "excluded",
          "expired"
        ]
      },
      "AssetProviderEnum": {
        "type": "string",
        "enum": [
          "cloudinary"
        ]
      },
      "AssetEntityWithSignatureDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "type": {
            "example": "image",
            "$ref": "#/components/schemas/AssetTypeEnum"
          },
          "status": {
            "example": "associated",
            "$ref": "#/components/schemas/AssetStatusEnum"
          },
          "provider": {
            "example": "cloudinary",
            "$ref": "#/components/schemas/AssetProviderEnum"
          },
          "directLink": {
            "type": "string",
            "example": "https://dummyimage.com/200x200/fff/000"
          },
          "signature": {
            "type": "string",
            "example": "bfd09f95f331f558cbd1320e67aa8d488770583e"
          },
          "timestamp": {
            "type": "number",
            "example": 1666215568
          },
          "params": {
            "type": "string",
            "example": "filename_override=false&public_id=commerce/3fa85f64-5717-4562-b3fc-2c963f66afa6&timestamp=1666215568&unique_filename=true"
          }
        },
        "required": [
          "id",
          "companyId",
          "type",
          "status",
          "provider",
          "signature",
          "timestamp",
          "params"
        ]
      },
      "I18nItemDto": {
        "type": "object",
        "properties": {
          "pt-br": {
            "type": "string",
            "example": "Algum texto em pt-br"
          },
          "en": {
            "type": "string",
            "example": "Some text in en"
          }
        },
        "required": [
          "pt-br",
          "en"
        ]
      },
      "FaqItemsEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "question": {
            "$ref": "#/components/schemas/I18nItemDto"
          },
          "answer": {
            "$ref": "#/components/schemas/I18nItemDto"
          },
          "externalUrl": {
            "type": "string",
            "example": "https://myquestion.should.move.to/"
          }
        },
        "required": [
          "id",
          "question",
          "answer"
        ]
      },
      "FaqItemsEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FaqItemsEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "FaqContextEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyEntityDto"
          },
          "name": {
            "type": "string",
            "example": "pre_sale"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "FaqContextEntityPaginatedDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FaqContextEntityDto"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreateFaqContextDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "pre_sale"
          }
        },
        "required": [
          "name"
        ]
      },
      "FaqContextItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "relevance": {
            "type": "number",
            "default": 0,
            "example": 0
          }
        },
        "required": [
          "id",
          "relevance"
        ]
      },
      "CreateFaqContextItemDto": {
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/I18nItemDto"
          },
          "answer": {
            "$ref": "#/components/schemas/I18nItemDto"
          },
          "externalUrl": {
            "type": "string",
            "example": "https://myquestion.should.move.to/"
          },
          "contexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FaqContextItemDto"
            }
          }
        },
        "required": [
          "question",
          "answer",
          "contexts"
        ]
      }
    }
  }
}